{"version":3,"sources":["Naviagtion.js","Welcome.js","useStateExamples/counter/components/ClassCounter.js","useStateExamples/counter/components/HookCounter.js","useStateExamples/counter/components/HookCounterTwo.js","useStateExamples/counter/components/HookCounterThree.js","useStateExamples/counter/components/HookCounterFour.js","useStateExamples/counter/Counter.js","useEffectExamples/components/ClassCounterOne.js","useEffectExamples/components/HookCounterOne.js","useEffectExamples/components/ClassCounterTwo.js","useEffectExamples/components/HookCounterTwo.js","useEffectExamples/components/ClassMouse.js","useEffectExamples/components/HookMouse.js","useEffectExamples/components/MouseContainer.js","useEffectExamples/components/IntervalClassCounter.js","useEffectExamples/components/IntervalHookCounter.js","useEffectExamples/components/IntervalHookCounterTwo.js","useEffectExamples/Index.js","useEffectExamples/components/dataFetching/DataFetch.js","useEffectExamples/components/dataFetching/DataFetchTwo.js","useEffectExamples/components/dataFetching/DataFetchThree.js","useEffectExamples/Index2.js","useContextExamples/components/ComponentE.js","useContextExamples/components/ComponentD.js","useContextExamples/components/ComponentF.js","useContextExamples/components/ComponentC.js","useContextExamples/Index.js","useReducerExamples/components/CounterOne.js","useReducerExamples/components/CounterTwo.js","useReducerExamples/components/CounterThree.js","useReducerExamples/components/globalState/ComponentA.js","useReducerExamples/components/globalState/ComponentD.js","useReducerExamples/components/globalState/ComponentB.js","useReducerExamples/components/globalState/ComponentF.js","useReducerExamples/components/globalState/ComponentE.js","useReducerExamples/components/globalState/ComponentC.js","useReducerExamples/components/globalState/GlobaleIndex.js","useReducerExamples/components/dataFetching/DataFetchingOne.js","useReducerExamples/components/dataFetching/DataFetchingTwo.js","useReducerExamples/components/dataFetching/DataFetchingIndex.js","useReducerExamples/Index.js","useCallbackExamples/components/Count.js","useCallbackExamples/components/Button.js","useCallbackExamples/components/Title.js","useCallbackExamples/components/ParentComponent.js","useCallbackExamples/IndexCallback.js","useMemoExamples/components/Counter.js","useMemoExamples/IndexMemo.js","useRefExamples/components/FocusInput.js","useRefExamples/components/ClassTimer.js","useRefExamples/components/HookTimer.js","useRefExamples/IndexRef.js","customHooksExamples/components/DocTitleOne.js","customHooksExamples/hooks/useDocumentTitle.js","customHooksExamples/components/DocTitleTwo.js","customHooksExamples/hooks/useCounter.js","customHooksExamples/components/CounterOne.js","customHooksExamples/components/CounterTwo.js","customHooksExamples/hooks/useInput.js","customHooksExamples/components/UserForm.js","customHooksExamples/CustomIndex.js","jsTesting/JSTesting.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Naviagtion","Navbar","collapseOnSelect","expand","bg","variant","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Welcome","ClassCounter","props","incrementCount","setState","count","state","style","backgroundColor","onClick","this","Component","HookCounter","useState","setCount","HookCounterTwo","textAlign","i","prevCount","HookCounterThree","firstName","lastName","name","setName","name1","setName1","type","value","onChange","e","target","JSON","stringify","HookCounterFour","items","setItems","length","Math","floor","random","map","item","key","Counter","ClassCounterOne","document","title","prevProps","prevState","console","log","HookCounterOne","useEffect","ClassCounterTwo","ClassMouse","logMousePosition","x","clientX","y","clientY","window","addEventListener","removeEventListener","HookMouse","setX","setY","MouseContainer","display","setDisplay","IntervalClassCounter","tick","interval","setInterval","clearInterval","color","IntervalHookCounter","IntervalHookCounterTwo","Index","DataFetch","posts","setPosts","axios","get","then","res","data","catch","err","post","DataFetchTwo","setPost","setId","DataFetchThree","idFromButtonClick","setIdFromButtonClick","Index2","ComponentE","UserContext","Consumer","user","ChannelContext","channel","ComponentD","ComponentF","useContext","ComponentC","React","createContext","IndexContext","Provider","reducer","action","CounterOne","useReducer","dispatch","initialState","firstCounter","secondCounter","CounterTwo","CounterThree","countTwo","dispatchTwo","ComponentA","countContext","CountContext","countState","countDispatch","ComponentB","GlobaleIndex","DataFetchingOne","loading","setLoading","error","setError","payload","DataFetchingTwo","DataFetchingIndex","sum","reduce","accumilator","initialValue","IndexReducer","memo","text","handleClick","children","ParentComponent","age","setAge","salary","setSalary","incrementAge","useCallback","incrementSalary","IndexCallback","counterOne","setCounterOne","counterTwo","setCounterTwo","isEven","useMemo","IndexMemo","FocusInput","inputRef","useRef","current","focus","ref","ClassTimer","timer","HookTimer","setTimer","intervalRef","prevTimer","IndexRef","DocTitleOne","useDocumentTitle","DocTitleTwo","useCounter","initialCount","increment","decrement","reset","useInput","setValue","UserForm","bindFirstName","resetFirstName","bindLastName","resetLastName","onSubmit","preventDefault","alert","CustomIndex","JSTesting","date","Date","formattedDate","toLocaleString","numberWithCommas","noDecimal","toFixed","twoDecimals","testingFunction16","placeholder","Home","marginTop","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9629bb40.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\n\r\nconst Naviagtion = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n        <Navbar.Brand href=\"/\">React-Hooks</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/useState\">useState</Nav.Link>\r\n          <Nav.Link href=\"/useEffect\">useEffect</Nav.Link>\r\n          <Nav.Link href=\"/useEffect/datafetch\">useEffect- data fetching</Nav.Link>\r\n          <Nav.Link href=\"/useContext\">useContext</Nav.Link>\r\n          <Nav.Link href=\"/useReducer\">useReducer</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n          <Nav.Link href=\"/useCallback\">useCallback</Nav.Link>\r\n            <Nav.Link href=\"/useMemo\">useMemo</Nav.Link>\r\n            <Nav.Link href=\"/useRef\">useRef</Nav.Link>\r\n            <Nav.Link href=\"/customHooks\">Custom Hooks</Nav.Link>\r\n            <Nav.Link href=\"/testing\">JS Testing</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n}\r\n\r\nexport default  Naviagtion\r\n","import React from 'react'\r\n\r\nconst Welcome = () => {\r\n    return (\r\n        <div>\r\n            <h1>Welcome</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// 3 Steps are neccessary to create this counter\r\n\r\n/*\r\n    1. Create a component - class component or functional component\r\n    2. Create a state variable (count) and initialize to 0\r\n    3. Create a method (incrementCount) that is capable of setting state value\r\n\r\n*/\r\n\r\nclass ClassCounter extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            count : 0\r\n        }\r\n    }\r\n\r\n    incrementCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"m-3 p-4\" style={{backgroundColor:'#deff85'}}>\r\n\r\n                <h4 className=\"mb-2\">Class Counter Example - using class component</h4>\r\n                <Button variant=\"info\" onClick={this.incrementCount}> Count {this.state.count} </Button>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassCounter\r\n","import React, {useState} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n/*\r\n    Two Rules we should remember using hooks\r\n        1. \"Only call hooks at the top level\"\r\n         - Don't call hooks inside loops, conditions, or nested functions\r\n\r\n        2. \"Only call hooks from React functions \"\r\n          -  Call them from within react functional components and not just any regular JS function\r\n*/\r\n\r\nconst HookCounter = () => {\r\n\r\n    //Use state is a function which returns initial value as well as updated value\r\n    //This is called array destruction which is a feature of ES6\r\n    const [count, setCount] = useState(0)\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#85d2ff'}}>\r\n\r\n            <h3 className='mb-2'>Hook Counter Example - using useState Hook</h3>\r\n\r\n            {/* If we don't use function call to onClick it returns a infinite loop */}\r\n            <Button variant=\"secondary\" onClick={() => setCount(count + 1)}>Count {count} </Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookCounter\r\n","import React, {useState} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst HookCounterTwo = () => {\r\n    const initialCount = 0\r\n    const [count, setCount] = useState(initialCount)\r\n\r\n    // First form of updating variable -- but this doesn't increment the value at once\r\n    const incrementFive = () => {\r\n        for(let i=0; i<5; i++){\r\n            setCount(count+1)\r\n        }\r\n    }\r\n\r\n    /* \r\n        2nd form of updating variable\r\n        Instead of passing value we pass function that has access to old state value\r\n        This is the safest method (When we have to update the state based on the previous value)\r\n        Good Practise is => Pass a function with prevState instead of passing value\r\n\r\n    */\r\n    const incrementTen = () => {\r\n        for(let i=0; i<10; i++){\r\n            setCount(prevCount => prevCount + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#ffc5ad'}}>\r\n\r\n            <h3 className='mb-2'>Hook Counter Example 2 with more features - using useState Hook</h3>\r\n\r\n                <h5 className='p-3' style={{backgroundColor:'#fafc65', textAlign:'center'}}> Count : {count}</h5> \r\n\r\n            <Button variant=\"dark\" onClick={() => setCount(count + 1)} className='m-2'> Increment </Button>\r\n            <Button variant=\"primary\" onClick={() => setCount(count - 1)} className='m-2'> Decrement </Button>\r\n            <Button variant=\"dark\" onClick={() => setCount(initialCount)} className='m-2'> Reset</Button>\r\n\r\n            {/* Even this example and HookCounter Example works these two are not a good way to do this */}\r\n            {/* Let's get another two buttons to check other two scenarios */}\r\n\r\n            <Button variant=\"outline-info\" onClick={incrementFive} className='m-2'> Increment 5</Button>\r\n            <Button variant=\"outline-info\" onClick={incrementTen} className='m-2'> Increment 10</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookCounterTwo\r\n","import React, {useState} from 'react'\r\n\r\nconst HookCounterThree = () => {\r\n\r\n    //state can be a string, number, object, boolean or array\r\n    const [name, setName] = useState(\r\n        {\r\n            firstName: '',\r\n            lastName: ''\r\n        }\r\n    )\r\n\r\n    const [name1, setName1] = useState(\r\n        {\r\n            firstName: '',\r\n            lastName: ''\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#abfff9'}}>\r\n            <div className=\"m-3 p-4\" style={{backgroundColor:'#defa61'}}>\r\n                <form>\r\n                    <input \r\n                        type=\"text\"\r\n                        value={name.firstName}\r\n                        onChange={e => setName({firstName: e.target.value})}\r\n                    />\r\n                    <input \r\n                        type=\"text\"\r\n                        value={name.lastName}\r\n                        onChange={e => setName({lastName: e.target.value})}\r\n                    />\r\n                </form>\r\n                <h6>Your first name is : {name.firstName} </h6>\r\n                <h6>Your last name is : {name.lastName} </h6>\r\n\r\n                <h5>To display the process</h5>\r\n                <h6>{JSON.stringify(name)}</h6>\r\n            </div>\r\n            \r\n            {/* useState does not automaticaly merge and update object. So when we see firstName, lastName is removed \r\n                This is a key difference between setState in class component and useSate \r\n                setState do it automaticaly but here we have to do it mannualy */}\r\n\r\n            {/* We can use spread operator for manual merge */}\r\n\r\n            <h4 className=\"m-3 p-4\">See the difference.....</h4>\r\n\r\n            <div className=\"m-3 p-4\" style={{backgroundColor:'#defa61'}}>\r\n                <h5>useState with spread operator to merge state</h5>\r\n                <form>\r\n                    <input \r\n                        type=\"text\"\r\n                        value={name1.firstName}\r\n                        onChange={e => setName1({...name1, firstName: e.target.value})}\r\n                    />\r\n                    <input \r\n                        type=\"text\"\r\n                        value={name1.lastName}\r\n                        onChange={e => setName1({...name1, lastName: e.target.value})}\r\n                    />\r\n                </form>\r\n\r\n                {/* Spread operator tell -- copy every property in the object and just override the field with different value*/}\r\n\r\n                <h6>Your first name is : {name1.firstName} </h6>\r\n                <h6>Your last name is : {name1.lastName} </h6>\r\n                <h5>To display the process</h5>\r\n                <h6>{JSON.stringify(name1)}</h6>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookCounterThree\r\n","import React, {useState} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// useState with arrays\r\n\r\nconst HookCounterFour = () => {\r\n    const [items, setItems] = useState([])\r\n\r\n    const addItem = () => {\r\n        setItems([...items,\r\n        {\r\n            id: items.length,\r\n            value: Math.floor(Math.random()*10) + 1\r\n        }])\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#ac96fa'}}>\r\n            <Button variant=\"warning\" onClick={addItem}>Add a number</Button>\r\n            <ul>\r\n                {items.map(item => (\r\n                    <li key={item.id}>{item.value}</li>\r\n                ))}\r\n            </ul>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookCounterFour\r\n","import React from 'react'\r\nimport ClassCounter from './components/ClassCounter'\r\nimport HookCounter from './components/HookCounter'\r\nimport HookCounterTwo from './components/HookCounterTwo'\r\nimport HookCounterThree from './components/HookCounterThree'\r\nimport HookCounterFour from './components/HookCounterFour'\r\n\r\n/*\r\n    Summary - useState\r\n\r\n    * The useState hook lets you add state to functional components\r\n    * In classes, the state is always an object\r\n    * With the useState hook, the state doesn't have to be an object. It can be object, string, boolean, number or array\r\n    * The useState hook returns an array with 2 elements.\r\n    * The first element is the current value of state, and the second element is a state setter function.\r\n    * New state value depends on the previous state value? You cn pass a function to the setter function.\r\n    * When dealing with objects or arrays, always make sure to spread your state variable and then call the setter function.\r\n    \r\n*/\r\n\r\nconst Counter = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <ClassCounter/>\r\n            <HookCounter/>\r\n            <HookCounterTwo/>\r\n            <HookCounterThree/>\r\n            <HookCounterFour/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass ClassCounterOne extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            count: 0,\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //Those `` are called template literals\r\n        document.title = `Clicked ${this.state.count} times`\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        console.log(\"Updating class component but not fixed conditionaly rendering\")\r\n        document.title = `Clicked ${this.state.count} times`\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <div className=\"m-3 p-4\" style={{backgroundColor:'#deff85'}}>\r\n\r\n                <h6 className='m-3'>Side efects in class component</h6>\r\n                <input \r\n                    type='text' \r\n                    value={this.state.name} \r\n                    onChange={e => {this.setState({name: e.target.value})}}\r\n                />\r\n                <Button variant='info' onClick={() => this.setState({count: this.state.count + 1})}>\r\n                    Click {this.state.count} times\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassCounterOne\r\n","import React, {useState, useEffect} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst HookCounterOne = () => {\r\n\r\n    const [count, setCount] = useState(0)\r\n    const [name, setName] = useState('')\r\n\r\n    /*\r\n        * When we specify useEffect, we are basicaly request in React to execute a function \r\n          that is pass as an argument everytime the component renders\r\n        * useEffect run after every render of the component\r\n    */\r\n    useEffect(()=> {\r\n        console.log(\"useEffect update not fixed conditionaly rendering\")\r\n        document.title = `You clicked ${count} times`\r\n    })\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#f1b6fa'}}>\r\n\r\n            <h6 className='m-3'>With useEffect hook</h6>\r\n\r\n            <input \r\n                    type='text' \r\n                    value={name} \r\n                    onChange={e => {setName(e.target.value)}}\r\n                />\r\n            <Button variant='success' onClick={()=> setCount(count + 1)}>\r\n                Click {count} times\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookCounterOne\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// Re-rendering after every executions causes performance problems\r\n// So have to conditionaly render\r\n\r\nclass ClassCounterTwo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            count: 0,\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = `Clicked ${this.state.count} times`\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        // Conditionaly update only when the count value changes\r\n        if(prevState.count !== this.state.count){\r\n            console.log(\"Updating class component with fixed conditionaly rendering\")\r\n            document.title = `Clicked ${this.state.count} times`\r\n        }\r\n       \r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <div className=\"m-3 p-4\" style={{backgroundColor:'#ffc4ab'}}>\r\n\r\n                <h6 className='m-3'>Side efects in class component</h6>\r\n                <input \r\n                    type='text' \r\n                    value={this.state.name} \r\n                    onChange={e => {this.setState({name: e.target.value})}}\r\n                />\r\n\r\n                <Button variant='danger' onClick={() => this.setState({count: this.state.count + 1})}>\r\n                    Click {this.state.count} times\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassCounterTwo","import React, {useState, useEffect} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst HookCounterOne = () => {\r\n\r\n    const [count, setCount] = useState(0)\r\n    const [name, setName] = useState('')\r\n\r\n   /*\r\n            Conditionaly rendering - passing dependencies as array\r\n            This is an optimisation technique\r\n   */\r\n    useEffect(()=> {\r\n\r\n        console.log(\"useEffect update fixed conditionaly rendering\")\r\n        document.title = `You clicked ${count} times`\r\n\r\n    }, [count])\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#d8d6ff'}}>\r\n\r\n            <h6 className='m-3'>With useEffect hook</h6>\r\n\r\n            <input \r\n                    type='text' \r\n                    value={name} \r\n                    onChange={e => {setName(e.target.value)}}\r\n                />\r\n            <Button variant='dark' onClick={()=> setCount(count + 1)}>\r\n                Click {count} times\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookCounterOne\r\n","import React, { Component } from 'react'\r\n\r\nclass ClassMouse extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    }\r\n\r\n    logMousePosition = e => {\r\n        this.setState({x: e.clientX, y: e.clientY})\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('mousemove', this.logMousePosition)\r\n    }\r\n\r\n    // Add cleanUp method\r\n    componentWillUnmount() {\r\n        window.removeEventListener('mousemove', this.logMousePosition)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"m-3 p-4\" style={{backgroundColor:'#4dff6d'}}>\r\n\r\n                <h5> Mouse Coordination with class component</h5>\r\n                <h6>X - {this.state.x}  Y - {this.state.y} </h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassMouse\r\n","import React, {useState,useEffect} from 'react'\r\n\r\nconst  HookMouse = () => {\r\n\r\n    const [x, setX] = useState(0)\r\n    const [y, setY] = useState(0)\r\n\r\n    const logMousePosition = e => {\r\n        console.log('Mouse Event')\r\n        setX(e.clientX)\r\n        setY(e.clientY)\r\n    }\r\n\r\n    // Empty array tells that this perticular effect does not depend on any props or state \r\n    useEffect(() => {\r\n        console.log('useEffect called')\r\n        window.addEventListener('mousemove', logMousePosition)\r\n\r\n        // Adding cleanUp - can canselling subscriptions, timers and remove eventHandlers\r\n        return () => {\r\n            console.log('Component unmounting code')\r\n            window.removeEventListener('mousemove', logMousePosition)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#4dff6d'}}>\r\n            <h5> Mouse Coordination with useEffect</h5>\r\n                <h6>X - {x}  Y - {y} </h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookMouse\r\n","import React, {useState} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport HookMouse from './HookMouse'\r\n\r\n\r\n// useEffect with cleanUp \r\n// Similar to componentWill Unmount life cycle method\r\n\r\nconst MouseContainer = () => {\r\n    const [display, setDisplay] = useState(true)\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#fffd70'}}>\r\n            \r\n            <Button variant='dark' onClick={()=> setDisplay(!display)}>Toggle display</Button>\r\n            {display && <HookMouse/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MouseContainer\r\n\r\n/*\r\n    index.js:1 Warning: Can't perform a React state update on an unmounted component. \r\n    This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n    at HookMouse\r\n*/\r\n","import React, { Component } from 'react'\r\n\r\nclass IntervalClassCounter extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.interval = setInterval(this.tick, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    tick = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"m-3 p-4\" style={{backgroundColor:'#000324'}}>\r\n                <h3 style={{color:'#ffffff' , textAlign:'center'}}> Interval Class Counter {this.state.count}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IntervalClassCounter\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst IntervalHookCounter = () =>{\r\n\r\n    const [count, setCount] = useState(0)\r\n\r\n    const tick = () => {\r\n        setCount(count + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        const interval = setInterval(tick, 1000)\r\n\r\n        return ()=> {\r\n            clearInterval(interval)\r\n        }\r\n    }, [count])\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#000324'}}>\r\n            <h3 style={{color:'#ffffff' , textAlign:'center'}}> Interval Hook Counter {count}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IntervalHookCounter\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst IntervalHookCounterTwo = () =>{\r\n\r\n    const [count, setCount] = useState(0)\r\n\r\n    const tick = () => {\r\n\r\n        // Get previous count and then we can remove count dependency from useEffect hook\r\n        setCount(prevCount => prevCount + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        /* Even if we can define this function outside the useEffect and call inside the useEffect,\r\n            sometimes it may lead to forget about the dependency. So the safest way is define the function \r\n            inside the useEffect and call it as well as put currect dependencies.\r\n        */\r\n        const doSomething = () => {\r\n            console.log(\"some prop\")\r\n        }\r\n        doSomething()\r\n        \r\n        const interval = setInterval(tick, 1000)\r\n        return ()=> {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    /*\r\n        We can use multiple useEffect calls withing the same component \r\n    */\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#000324'}}>\r\n            <h3 style={{color:'#ffffff' , textAlign:'center'}}> Interval Hook Counter Two - Second form {count}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IntervalHookCounterTwo\r\n","import React from 'react'\r\nimport ClassCounterOne from './components/ClassCounterOne'\r\nimport HookCounterOne from './components/HookCounterOne'\r\nimport ClassCounterTwo from './components/ClassCounterTwo'\r\nimport HookCounterTwo from './components/HookCounterTwo'\r\nimport ClassMouse from './components/ClassMouse'\r\nimport HookMouse from './components/HookMouse'\r\nimport MouseContainer from './components/MouseContainer'\r\nimport IntervalClassCounter from './components/IntervalClassCounter'\r\nimport IntervalHookCounter from './components/IntervalHookCounter'\r\nimport IntervalHookCounterTwo from './components/IntervalHookCounterTwo'\r\n\r\n/*\r\n    useEffect\r\n\r\n        * The Effect hook let you perform side eefects in functional component\r\n        * It is a close replacement for 'componentDidMount, 'componentDidUpdate' and 'componentWillUnmount'\r\n        * \r\n*/\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <ClassCounterOne/>\r\n            <HookCounterOne/>\r\n            <ClassCounterTwo/>\r\n            <HookCounterTwo/>\r\n            <ClassMouse/>\r\n            <HookMouse/>\r\n            <MouseContainer/>\r\n            <IntervalClassCounter/>\r\n            <IntervalHookCounter/>\r\n            <IntervalHookCounterTwo/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n// For this use json Placeholder for data fetching\r\n\r\nconst DataFetch = () => {\r\n\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(()=> {\r\n\r\n        // axios.get accepts the url and the get request returns a promise \r\n        axios.get('https://jsonplaceholder.typicode.com/posts')\r\n            .then(res =>{\r\n                console.log(res)\r\n                setPosts(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#deff85'}}>\r\n            <h3> Fetching data using axios and useEffect hook</h3>\r\n            <ul>\r\n                {\r\n                    posts.map(post => <li key={post.id}>{post.title}</li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetch\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n// For this use json Placeholder for data fetching\r\n\r\nconst DataFetchTwo = () => {\r\n\r\n    const [post, setPost] = useState({})\r\n    const [id, setId] = useState(1)\r\n\r\n    useEffect(()=> {\r\n\r\n        // axios.get accepts the url and the get request returns a promise \r\n        axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n            .then(res =>{\r\n                console.log(res)\r\n                setPost(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [id])\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#b1b7fc'}}>\r\n            <h3> Fetching one post using id</h3>\r\n\r\n            <input type=\"text\" value={id} onChange={e => setId(e.target.value)}/>\r\n\r\n            <h5>{post.title}</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetchTwo\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n// For this use json Placeholder for data fetching\r\n\r\nconst DataFetchThree = () => {\r\n\r\n    const [post, setPost] = useState({})\r\n    const [id, setId] = useState(1)\r\n\r\n    // for button click\r\n    const [idFromButtonClick, setIdFromButtonClick] = useState(1)\r\n\r\n    const handleClick = () => {\r\n        setIdFromButtonClick(id)\r\n    }\r\n\r\n    useEffect(()=> {\r\n\r\n        // axios.get accepts the url and the get request returns a promise \r\n        axios.get(`https://jsonplaceholder.typicode.com/posts/${idFromButtonClick}`)\r\n            .then(res =>{\r\n                console.log(res)\r\n                setPost(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [idFromButtonClick])\r\n\r\n    //Here fetching data using onClick event rather than onChnage\r\n\r\n    return (\r\n        <div className=\"m-3 p-4\" style={{backgroundColor:'#ff9efc'}}>\r\n            <h3> Fetching one post using id with button click - See the difference with above one</h3>\r\n\r\n            <input type=\"text\" value={id} onChange={e => setId(e.target.value)}/>\r\n            <Button type=\"button\" variant='danger' onClick={handleClick}> Fetch Post</Button>\r\n\r\n            <h5>{post.title}</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetchThree","import React from 'react'\r\nimport DataFetch from './components/dataFetching/DataFetch'\r\nimport DataFetchTwo from './components/dataFetching/DataFetchTwo'\r\nimport DataFetchThree from './components/dataFetching/DataFetchThree'\r\n\r\n/*  \r\n    Fetching data from API endpoint\r\n    In the future --> suspence will incharge for data fetching\r\n\r\n    We can use fetch API (which is react built in data fetching feature) or axios libraray\r\n*/\r\n\r\nconst Index2 = () => {\r\n    return (\r\n        <div className='container'>\r\n            <DataFetch/>\r\n            <DataFetchTwo/>\r\n            <DataFetchThree/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index2\r\n","import React from 'react'\r\nimport {UserContext, ChannelContext} from '../Index'\r\n\r\n// This nested consumers is not a good practise\r\n// Most suitable and easy way is useContext hook\r\n\r\nconst ComponentE = () => {\r\n    return (\r\n        <div>\r\n            <UserContext.Consumer>\r\n                {\r\n                    user => {\r\n                        return (\r\n                            <ChannelContext.Consumer>\r\n                                {\r\n                                    channel => {\r\n                                        return (\r\n                                            <div className=\"m-3 p-4\" style={{backgroundColor:'#a7fca8'}}>\r\n                                                <h1>User context value : {user} </h1>\r\n                                                <h1> Channel Context Value : {channel}</h1>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            </ChannelContext.Consumer>\r\n                        )\r\n                    }\r\n                }\r\n            </UserContext.Consumer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentE\r\n","import React from 'react'\r\nimport ComponentE from './ComponentE'\r\n\r\nconst ComponentD = () => {\r\n    return (\r\n        <div>\r\n            <ComponentE/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentD\r\n","import React, {useContext} from 'react'\r\nimport {UserContext, ChannelContext} from '../Index'\r\n\r\nconst ComponentF = () => {\r\n\r\n    const user = useContext(UserContext)\r\n    const channel = useContext(ChannelContext)\r\n\r\n    return (\r\n        <div className=\"jumbotrone p-4 m-3\" style={{backgroundColor: '#f5ff8a'}}>\r\n            <h1>This is UserContext and ChannelContext consume using useContext</h1>\r\n            <h3>User Context value: {user}</h3>\r\n            <h3>Channel Context value: {channel}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentF\r\n","import React from 'react'\r\nimport ComponentD from './ComponentD'\r\nimport ComponentF from './ComponentF'\r\n\r\nconst ComponentC = () => {\r\n    return (\r\n        <div className='p-3' style={{backgroundColor: '#d6fff0'}}>\r\n            <ComponentD/>\r\n            <ComponentF/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentC\r\n","import React from 'react'\r\nimport ComponentC from './components/ComponentC'\r\n\r\n/*\r\n    * Normaly we have to pass data from a component to other component as props\r\n    * But it become a problem when we have to pass data from highest level component to lowest level. ( We have to pass through intermediate components even they don't need that props)\r\n    * Authenticated users, labguage preference ect. are used in several components\r\n\r\n    * Context provides a way to pass data through the component tree without \r\n      having to pass down manually at every level\r\n\r\n      3 STEPS WHEN MAKING CONTEXT\r\n\r\n      Step 1 --> Create the context\r\n*/\r\n\r\nexport const UserContext = React.createContext()\r\nexport const ChannelContext = React.createContext()\r\n\r\nconst IndexContext = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <UserContext.Provider value={'Supuni'}>\r\n                <ChannelContext.Provider value={'Code Evalution'}>\r\n                    <ComponentC/>\r\n                </ChannelContext.Provider>\r\n            </UserContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexContext\r\n","import React, {useReducer} from 'react'\r\n\r\n// Step 1 --> define initial state\r\nconst initialState = 0\r\n\r\n// Reduce() accepts state and action then do some action on state then return newState\r\n// For this example we have 3 actions that are increment,decrement and reset\r\n\r\n\r\n// Step 2 --> define reducer function\r\nconst reducer = (state, action) => {\r\n    switch(action) {\r\n        case 'increment': \r\n           return state + 1\r\n        case 'decrement' : \r\n            return state - 1\r\n        case 'reset' : \r\n            return initialState \r\n        default : \r\n            return state\r\n    }\r\n}\r\n\r\nconst CounterOne = () => {\r\n\r\n    // Step 3 --> get to use \r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#c9ffbf'}}>\r\n            <h3> Count - {count}</h3>\r\n            <button className=\"btn btn-outline-success p-1 m-2\" onClick={()=> dispatch('increment')}>Increment</button>\r\n            <button className=\"btn btn-outline-warning p-1 m-2\" onClick={()=> dispatch('decrement')}>Decrement</button>\r\n            <button className=\"btn btn-outline-danger p-1 m-2\" onClick={()=> dispatch('reset')}>Reset</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterOne\r\n","import React, {useReducer} from 'react'\r\n\r\n// State as an object\r\nconst initialState = {\r\n    firstCounter : 0,\r\n    secondCounter : 10\r\n}\r\n\r\n// Now we have two properties in the state object but changing only one at a time \r\n// To get the expected output we have to modify the return statement to merge the state properties - use spread operator\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'increment': \r\n           return { ...state, firstCounter: state.firstCounter + action.value} // Action as an object\r\n        case 'decrement' : \r\n            return { ...state, firstCounter: state.firstCounter - action.value }\r\n\r\n        // These are for counterTwo\r\n        case 'increment2': \r\n            return { ...state, secondCounter: state.secondCounter + action.value} // Action as an object\r\n         case 'decrement2' : \r\n             return { ...state, secondCounter: state.secondCounter - action.value }\r\n        case 'reset' : \r\n            return initialState\r\n        default : \r\n            return state\r\n    }\r\n}\r\n\r\nconst CounterTwo = () => {\r\n\r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#f9f89f', textAlign:'center'}}>\r\n            <h3> First Count - {count.firstCounter}</h3>\r\n            <h3> Second Counter - {count.secondCounter} </h3>\r\n            <div>\r\n                <button className=\"btn btn-outline-success p-1 m-2\" onClick={()=> dispatch( {type: 'increment', value: 1 })}>\r\n                    Increment\r\n                </button>\r\n                <button className=\"btn btn-outline-warning p-1 m-2\" onClick={()=> dispatch({type: 'decrement', value: 1 })}>\r\n                    Decrement\r\n                </button>\r\n                <button className=\"btn btn-outline-primary p-1 m-2\" onClick={()=> dispatch( {type: 'increment', value: 5 })}>\r\n                    Increment\r\n                </button>\r\n                <button className=\"btn btn-outline-secondary p-1 m-2\" onClick={()=> dispatch({type: 'decrement', value: 5 })}>\r\n                    Decrement\r\n                </button>\r\n            </div>\r\n\r\n            {/* For counter two  */}\r\n            <div>\r\n                <button className=\"btn btn-outline-success p-1 m-2\" onClick={()=> dispatch( {type: 'increment2', value: 1 })}>\r\n                    Increment Counter 2\r\n                </button>\r\n                <button className=\"btn btn-outline-warning p-1 m-2\" onClick={()=> dispatch({type: 'decrement2', value: 1 })}>\r\n                    Decrement Counter 2\r\n                </button>\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-danger p-1 m-2\" onClick={()=> dispatch({type: 'reset', value: 1 })}>\r\n                Reset\r\n            </button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterTwo\r\n\r\n/*\r\n    What is the advantage of using this pattern?\r\n        * When we have action as an object we can use additional data (properties)\r\n        * When we use state as an object, we are able to keep track of multiple state variables\r\n*/","import React, {useReducer} from 'react'\r\n\r\nconst initialState = 0\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action) {\r\n        case 'increment': \r\n           return state + 1\r\n        case 'decrement' : \r\n            return state - 1\r\n        case 'reset' : \r\n            return initialState \r\n        default : \r\n            return state\r\n    }\r\n}\r\n\r\nconst CounterThree = () => {\r\n\r\n    // We can use multiple useReducers\r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n    const [countTwo, dispatchTwo] = useReducer(reducer, initialState)\r\n\r\n    // Now both two counters working independently even we use same pease of code\r\n\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#a9cfcf', textAlign:'center'}}>\r\n            <div>\r\n                <h3> Count One- {count}</h3>\r\n                <button className=\"btn btn-success p-1 m-2\" onClick={()=> dispatch('increment')}>Increment</button>\r\n                <button className=\"btn btn-warning p-1 m-2\" onClick={()=> dispatch('decrement')}>Decrement</button>\r\n                <button className=\"btn btn-danger p-1 m-2\" onClick={()=> dispatch('reset')}>Reset</button> \r\n            </div>\r\n            <div>\r\n                <h3> Count Two - {countTwo}</h3>\r\n                <button className=\"btn btn-success p-1 m-2\" onClick={()=> dispatchTwo('increment')}>Increment</button>\r\n                <button className=\"btn btn-warning p-1 m-2\" onClick={()=> dispatchTwo('decrement')}>Decrement</button>\r\n                <button className=\"btn btn-danger p-1 m-2\" onClick={()=> dispatchTwo('reset')}>Reset</button> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterThree","import React, {useContext} from 'react'\r\nimport { CountContext } from './GlobaleIndex'\r\n\r\nconst ComponentA = () => {\r\n    const countContext = useContext(CountContext)\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'wheat'}}>\r\n            <h5>Component A</h5>\r\n            <h6> Count Value in local component equal to gloable value - {countContext.countState} </h6>\r\n            <button className=\"btn btn-outline-success p-1 m-2\" onClick={()=> countContext.countDispatch('increment')}>Increment</button>\r\n            <button className=\"btn btn-outline-warning p-1 m-2\" onClick={()=> countContext.countDispatch('decrement')}>Decrement</button>\r\n            <button className=\"btn btn-outline-danger p-1 m-2\" onClick={()=> countContext.countDispatch('reset')}>Reset</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentA\r\n","import React, {useContext} from 'react'\r\nimport { CountContext } from './GlobaleIndex'\r\n\r\nconst ComponentD = () => {\r\n    const countContext = useContext(CountContext)\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#ffccff'}}>\r\n            <h5>Component D</h5>\r\n            <h6> Count Value in local component equal to gloable value - {countContext.countState} </h6>\r\n            <button className=\"btn btn-outline-success p-1 m-2\" onClick={()=> countContext.countDispatch('increment')}>Increment</button>\r\n            <button className=\"btn btn-outline-warning p-1 m-2\" onClick={()=> countContext.countDispatch('decrement')}>Decrement</button>\r\n            <button className=\"btn btn-outline-danger p-1 m-2\" onClick={()=> countContext.countDispatch('reset')}>Reset</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentD","import React from 'react'\r\nimport ComponentD from './ComponentD'\r\n\r\nconst ComponentB = () => {\r\n    return (\r\n        <div>\r\n            Component B\r\n            <ComponentD/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentB","import React, {useContext} from 'react'\r\nimport { CountContext } from './GlobaleIndex'\r\n\r\nconst ComponentF = () => {\r\n    const countContext = useContext(CountContext)\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'white'}}>\r\n            <h5>Component F</h5>\r\n            <h6> Count Value in local component equal to gloable value - {countContext.countState} </h6>\r\n            <button className=\"btn btn-outline-success p-1 m-2\" onClick={()=> countContext.countDispatch('increment')}>Increment</button>\r\n            <button className=\"btn btn-outline-warning p-1 m-2\" onClick={()=> countContext.countDispatch('decrement')}>Decrement</button>\r\n            <button className=\"btn btn-outline-danger p-1 m-2\" onClick={()=> countContext.countDispatch('reset')}>Reset</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentF","import React from 'react'\r\nimport ComponentF from './ComponentF'\r\n\r\nconst ComponentE = () => {\r\n    return (\r\n        <div>\r\n            Component E\r\n            <ComponentF/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentE","import React from 'react'\r\nimport ComponentE from './ComponentE'\r\n\r\nconst ComponentC = () => {\r\n    return (\r\n        <div>\r\n            Component C\r\n            <ComponentE/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComponentC","import React, {useReducer} from 'react'\r\nimport ComponentA from './ComponentA'\r\nimport ComponentB from './ComponentB'\r\nimport ComponentC from './ComponentC'\r\n\r\nexport const CountContext = React.createContext()\r\n\r\nconst initialState = 0\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action) {\r\n        case 'increment': \r\n           return state + 1\r\n        case 'decrement' : \r\n            return state - 1\r\n        case 'reset' : \r\n            return initialState \r\n        default : \r\n            return state\r\n    }\r\n}\r\n\r\nconst GlobaleIndex = () => {\r\n    const [count, dispatch] = useReducer(reducer, initialState)\r\n\r\n    // In this example we don't need to dispatch method in this component. \r\n    // We want to use it in child component. So we use ContextAPI and useContext hook\r\n\r\n    return (\r\n        <CountContext.Provider value={{countState: count, countDispatch: dispatch}}>\r\n            <div className=\"p-3 m-3\" style={{backgroundColor:'violet'}}>\r\n            <h2 style={{textAlign:'center'}}> Manage Globle Counter Value</h2>\r\n            <h3 style={{textAlign:'center'}}> Count - {count}</h3>\r\n                <ComponentA/>\r\n                <ComponentB/>\r\n                <ComponentC/>\r\n            </div>\r\n        </CountContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobaleIndex\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst DataFetchingOne = () => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [post, setPost] = useState({})\r\n\r\n    //Passing empty array ensures that this is calling once\r\n    useEffect(() => {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(res => {\r\n                setLoading(false)\r\n                setPost(res.data)\r\n                setError('')\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                setPost({})\r\n                setError('Something Went Wrong')\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#beff99'}}>\r\n            <h2 style={{textAlign:'center'}}>Data Fetching with useState hook</h2>\r\n            { loading ? \r\n                <h5>Loading</h5> \r\n                : <h3> {post.title} </h3>\r\n            }\r\n            { error ? \r\n                <h5>{error}</h5>\r\n            : null }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetchingOne\r\n","import React, {useReducer, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    error : '',\r\n    post : []\r\n}\r\n\r\n/*  We can see two clear actions in axios fetching in DataFetchOne.js\r\n    For useReducer case we take those actions as action types in reducer function\r\n    And we set states acording to those actions here \r\n */\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_SUCCESS' : \r\n            return {\r\n                loading : false,\r\n                post : action.payload,\r\n                error : ''\r\n            }\r\n        case 'FETCH_ERROR' : \r\n            return {\r\n                loading: false,\r\n                post : {},\r\n                error : 'Something Went Wrong'\r\n            }\r\n        default : \r\n            return state\r\n    }\r\n}\r\n\r\nconst DataFetchingTwo = () => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(() => {\r\n        axios.get('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(res => {\r\n                dispatch({\r\n                    type : 'FETCH_SUCCESS',\r\n                    payload : res.data})\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type : 'FETCH_ERROR'})\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#bdbce0'}}>\r\n            <h2 style={{textAlign:'center'}}>Data Fetching with useReducer hook</h2>\r\n            { state.loading ? \r\n                <h5>Loading</h5> \r\n                : <h3> {state.post.title} </h3>\r\n            }\r\n            { state.error ? \r\n                <h5>{state.error}</h5>\r\n            : null }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetchingTwo\r\n","import React from 'react'\r\nimport DataFetchingOne from './DataFetchingOne'\r\nimport DataFetchingTwo from './DataFetchingTwo'\r\n\r\nconst DataFetchingIndex = () => {\r\n    return (\r\n        <div className=\"p-3 m-3\" style={{backgroundColor:\"wheat\"}}>\r\n            <DataFetchingOne/>\r\n            <DataFetchingTwo/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetchingIndex\r\n","import React from 'react'\r\nimport CounterOne from './components/CounterOne'\r\nimport CounterTwo from './components/CounterTwo'\r\nimport CounterThree from './components/CounterThree'\r\nimport GlobaleIndex from './components/globalState/GlobaleIndex'\r\nimport DataFetchingIndex from './components/dataFetching/DataFetchingIndex'\r\n\r\n/*\r\n    * useReducer is a hook that is used for state management\r\n    * It's an alternative to useState\r\n    * useReducer is a most primitive hook compaired to useState. useState is built using useReducer\r\n    *\r\n    * Reduce method in vanila java script takes 2 parameters - reducer function & initial value\r\n    * reducer() returns a single value \r\n    * useReducer() also accepts 2 parameters - currentState, action\r\n    * useReducer() returns a newState\r\n    * useReducer() hook returns pair of values - [newState, dispatch]\r\n    * dispatch method is basically used to specify the action\r\n    * \r\n    * ===========================================\r\n    * \r\n    * useReducer(reducer, initialState)\r\n    * reducer(currentState, action)\r\n    * \r\n    * CounterOne, CounterTwo & CounterThree shows the local state management\r\n    * CounterFour shows share state between components which is called Global state manangement  ==> useReducer + useContext\r\n    * \r\n    * ==============================================================================================================================\r\n    * \r\n    * When to use useReducer hook over the useState hook wheres both are used for state management ?\r\n    * \r\n    *   1. Type of state ------ (Number, String, Boolean - useState )  ( Object, Array - useReducer)\r\n    *   2. Number of state transistions   ---------- ( One or two - useState )  ( Too many  - useReducer )\r\n    *   3. Related state transistions?   -------------  ( No - useState )  ( Yes - useReducer )\r\n    *   4. Business Logic -----------  ( For No business logic - useState ) ( For Complex business logic - useReducer )\r\n    *   5. Local vs global ----------  ( For local state - useState ) ( For global state - useReducer )\r\n*/\r\n\r\n\r\n// Let's check reduce() method\r\nconst numbers = [1,2,3,4,5,6]\r\nconst reducer = (accumilator, initialValue) => accumilator + initialValue\r\nconst sum = numbers.reduce(reducer, 4)\r\nconsole.log(\"Testing reduce() in vanila javaScript :\" + sum)\r\n// Answer ==> 25 == 4 + 1 + 2 + 3 + 4 + 5 + 6\r\n\r\nconst IndexReducer = () => {\r\n    return (\r\n        <div className=\"continer\">\r\n            <CounterOne/>\r\n            <CounterTwo/>\r\n            <CounterThree/>\r\n            <GlobaleIndex/>\r\n            <DataFetchingIndex/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexReducer\r\n","import React from 'react'\r\n\r\nconst Count = ({text, count}) => {\r\n\r\n    console.log(`Rendering ${text}`)\r\n    return (\r\n        <div>\r\n            {text} - {count}\r\n        </div>\r\n    )\r\n}\r\n\r\n// Cover with react.memo to prevent re-rendering without any prop or state chnages\r\nexport default React.memo(Count)\r\n","import React from 'react'\r\n\r\nconst Button = ({handleClick, children}) => {\r\n\r\n    console.log('Rendering button - ', children)\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick}>\r\n                {children}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Cover with react.memo to prevent re-rendering without any prop or state chnages\r\nexport default React.memo(Button)\r\n","import React from 'react'\r\n\r\nconst Title = () => {\r\n    console.log('Rendering Title')\r\n\r\n    return (\r\n        <h2 style={{textAlign:'center'}}>\r\n            useCallback Hook\r\n        </h2>\r\n    )\r\n}\r\n\r\n// Cover with react.memo to prevent re-rendering without any prop or state chnages\r\nexport default React.memo(Title)\r\n","import React, {useState, useCallback} from 'react'\r\nimport Count from './Count'\r\nimport Button from './Button'\r\nimport Title from './Title'\r\n\r\nconst ParentComponent = () => {\r\n\r\n    const [age, setAge ] = useState(25)\r\n    const [salary, setSalary] = useState(50000)\r\n\r\n    const incrementAge = useCallback(() => {\r\n        setAge(age + 1)\r\n    },[age])\r\n\r\n    const incrementSalary = useCallback(() => {\r\n        setSalary(salary + 1000)\r\n    },[salary])\r\n\r\n    return (\r\n        <div className=\"m-3 p-3\" style={{backgroundColor:'#f8abff', textAlign:'center'}}>\r\n            <Title/>\r\n            <Count text=\"Age\" count={age} />\r\n            <Button handleClick={incrementAge}>Increment Age</Button>\r\n            <Count text=\"Salary\" count={salary}/>\r\n            <Button handleClick={incrementSalary}>Increment Salary</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ParentComponent\r\n","import React from 'react'\r\nimport ParentComponent from './components/ParentComponent'\r\n\r\n/*\r\n    Performance optimisation\r\n\r\n        * Here used console.log() statements for checking it. \r\n        * We saw that every component re-rendered after clicking a button and it's unnccessary.\r\n        * To optimse this we use react.memo\r\n        * \r\n        *  React.memo ------ Higher order component that will prevent a functional component from being re-rendered\r\n            if it's prop or states do not change\r\n\r\n        * useCallback hook ---------------\r\n        *       What ?\r\n        *       useCallback is a hook that will return a memorized version of the callback function that only \r\n                changes if one of the dependencies has changed. \r\n        *       Why ?\r\n        *       It is useful when passing callbacks to optimse child components that rely on reference equality to \r\n        *       prevent unneccesary renders.\r\n        *       How ?\r\n        *       1. Import from react\r\n        *       2. call useCallback which accepts callback function as the first parameter and array of dependencies as second parameter\r\n\r\n*/\r\n\r\nconst IndexCallback = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <ParentComponent/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexCallback\r\n","import React, {useState, useMemo} from 'react'\r\n\r\nconst Counter = () => {\r\n\r\n    const [counterOne, setCounterOne] = useState(0)\r\n    const [counterTwo, setCounterTwo] = useState(0)\r\n\r\n    const incrementOne = () =>{\r\n        setCounterOne(counterOne + 1)\r\n    }\r\n\r\n    const incrementTwo = () => {\r\n        setCounterTwo(counterTwo + 1)\r\n    }\r\n\r\n    const isEven = useMemo(() => {\r\n        // let i = 0\r\n        // while(1 < 200000000) i++ \r\n        return counterOne % 2 === 0\r\n    },[counterOne])\r\n\r\n    // const isEven = () => {\r\n    //     let i =0\r\n    //     while(1 < 200000000) i++ \r\n    //     return counterOne % 2 === 0\r\n    // }\r\n\r\n    return (\r\n        <div style={{textAlign:'center', backgroundColor:'#aaff75'}}>\r\n            <div className='m-3 p-3'>\r\n                <button onClick={incrementOne}> Count One - {counterOne} </button>\r\n                \r\n                {/* Now isEven is a catch value instead of a function call */}\r\n                <span className='m-2'>{ isEven ? 'Even' : 'Odd' }</span>\r\n            </div>\r\n            <div className='m-3 p-3'>\r\n            <button onClick={incrementTwo}> Count Two - {counterTwo}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import React from 'react'\r\nimport Counter from './components/Counter'\r\n\r\n/*\r\n        * useMemo is a hook that will only recompute the catched value when one of the dependencies has changed\r\n        * Difference between useCallback and useMemo\r\n        *       - useCallback catches the provided function instance itselft wheres useMemo invokes the provided function and catched it's result\r\n        *       - So if you want to catched the function --- useCallback()\r\n        *       - if you want catched the result  ----- useMemo()\r\n*/\r\n\r\nconst IndexMemo = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h2 style={{textAlign:'center'}}> useMemo</h2>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexMemo\r\n","import React, {useEffect, useRef} from 'react'\r\n\r\nconst FocusInput = () => {\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(()=> {\r\n        //Focus input element\r\n        inputRef.current.focus()\r\n    },[])\r\n\r\n    return (\r\n        <div style={{backgroundColor:'#f1ff75'}}>\r\n            <input ref ={inputRef} type =\"text\"></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FocusInput\r\n","import React, { Component } from 'react'\r\n\r\nclass ClassTimer extends Component {\r\n\r\n    interval \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             timer : 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval (()=> {\r\n            this.setState(prevState => (({timer: prevState.timer + 1})))\r\n        }, 1000)\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='m-3 p-3' style={{backgroundColor:'#c7ffed'}}>\r\n                <h3>Class Timer - {this.state.timer} </h3>\r\n                <button onClick={()=>clearInterval(this.interval)}> Clear Interval</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassTimer\r\n","import React, {useState, useEffect, useRef} from 'react'\r\n\r\nconst HookTimer = () => {\r\n\r\n    const [timer, setTimer] = useState(0)\r\n\r\n    /*\r\n        useRef is used to access DOM nodes as well as store any mutable value(does not cause re-renders)\r\n    */\r\n\r\n    const intervalRef = useRef()\r\n\r\n    useEffect(() => {\r\n        // const interval = setInterval(()=> {\r\n        //     setTimer(prevTimer => prevTimer + 1)\r\n        // }, 1000)\r\n\r\n        intervalRef.current = setInterval(() => {\r\n            setTimer(prevTimer => prevTimer + 1)\r\n        }, 1000)\r\n\r\n        return () => {\r\n            // clearInterval(interval)\r\n            clearInterval(intervalRef.current)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='m-3 p-3' style={{backgroundColor:'#ffc8ab'}}>\r\n            <h3>Hook Timer - {timer} </h3>\r\n            {/* In this functional component if we use like this we will get an error since the scope of interval is only useEffect hook. So we have to use useRef()\r\n            <button onClick={() => clearInterval(interval)}>Clear Hook Timer</button> */}\r\n\r\n            <button onClick={() => clearInterval(intervalRef.current)}>Clear Hook Timer</button> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HookTimer\r\n","import React from 'react'\r\nimport FocusInput from './components/FocusInput'\r\nimport ClassTimer from './components/ClassTimer'\r\nimport HookTimer from './components/HookTimer'\r\n\r\nconst IndexRef = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>useRef Hook</h2>\r\n            <FocusInput/>\r\n            <h2>useRef Hook - ClassTimer</h2>\r\n            <ClassTimer/>\r\n            <h2>useRef Hook - HookTimer</h2>\r\n            <HookTimer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IndexRef\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst DocTitleOne = () => {\r\n\r\n    const [count, setCount] = useState(0)\r\n\r\n    useEffect(() => {\r\n        document.title = `Count ${count}`\r\n    }, [count])\r\n\r\n    return (\r\n        <div className='m-3 p-3' style={{backgroundColor:'wheat'}}>\r\n            <button onClick={()=> setCount(count + 1)}> Count - {count} </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocTitleOne\r\n","import {useEffect} from 'react'\r\n\r\n// We can omit React since we are not using JSX here. However in React 17 we don't need to import React to use JSX\r\nconst useDocumentTitle = (count) => {\r\n\r\n    useEffect(() => {\r\n        document.title = `Count ${count}`\r\n    }, [count])\r\n}\r\n\r\nexport default useDocumentTitle\r\n","import React, {useState} from 'react'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\n\r\nconst DocTitleTwo = () => {\r\n\r\n    const [count, setCount] = useState(0)\r\n\r\n    // Custom Hook\r\n    useDocumentTitle(count)\r\n\r\n    return (\r\n        <div className='m-3 p-3' style={{backgroundColor:'whitesmoke'}}>\r\n            <h5> useDocumentTitle custom hook</h5>\r\n            <button onClick={()=> setCount(count + 1)}> Count - {count} </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocTitleTwo\r\n","import {useState} from 'react'\r\n\r\n// Can customise the intial value by passing it as parameter\r\n// Add second parameter as value\r\nconst useCounter = (initialCount = 0, value) => {\r\n    const [count, setCount] = useState(initialCount)\r\n\r\n    const increment = () => {\r\n        setCount(prevCount => prevCount + value)\r\n    }\r\n\r\n    const decrement = () => {\r\n        setCount(prevCount => prevCount - value)\r\n    }\r\n \r\n    const reset = () => {\r\n        setCount(initialCount)\r\n    }\r\n\r\n    return [count, increment, decrement, reset]\r\n}\r\n\r\nexport default useCounter\r\n","import React from 'react'\r\nimport useCounter from '../hooks/useCounter'\r\n\r\nconst CounterOne = () => {\r\n\r\n    const [count, increment, decrement, reset] = useCounter(0, 1)\r\n\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#12ff12', textAlign:'center'}}>\r\n            <h4> Count = {count} </h4>\r\n            <button onClick={increment}>Increment</button>\r\n            <button onClick={decrement}>Decrement</button>\r\n            <button onClick={reset}>Reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterOne\r\n","import React from 'react'\r\nimport useCounter from '../hooks/useCounter'\r\n\r\nconst CounterTwo = () => {\r\n\r\n    // Using useCounter custom hook\r\n    // use initial value as 10 \r\n    const [count, increment, decrement, reset] = useCounter(10, 5)\r\n\r\n    return (\r\n        <div className='p-3 m-3' style={{backgroundColor:'#12ccab', textAlign:'center'}}>\r\n            <h4> Count = {count} </h4>\r\n            <button onClick={increment}>Increment</button>\r\n            <button onClick={decrement}>Decrement</button>\r\n            <button onClick={reset}>Reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterTwo","import {useState} from 'react'\r\n\r\nconst useInput = (initialValue) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const reset = () => {\r\n        setValue(initialValue)\r\n    }\r\n    const bind = {\r\n        value: value,\r\n        onChange : e => {\r\n            setValue(e.target.value)\r\n        }\r\n    }\r\n    return [value, bind, reset]\r\n}\r\n\r\nexport default useInput\r\n","import React from 'react'\r\nimport useInput from '../hooks/useInput'\r\n\r\nconst UserForm = () => {\r\n\r\n    // Using useInput custom hook\r\n    const [firstName,bindFirstName, resetFirstName] = useInput('')\r\n    const [lastName,bindLastName, resetLastName] = useInput('')      \r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        alert(`Hello ${firstName} ${lastName}`)\r\n        resetFirstName()\r\n        resetLastName()\r\n    }\r\n    return (\r\n        <div className='m-3 p-3' style={{backgroundColor:'#cccccc'}}>\r\n            <form onSubmit={submitHandler} className='p-3 m-2'>\r\n                <div>\r\n                    <label>First Name</label>\r\n                    <input {...bindFirstName} type='text'/> \r\n                </div>\r\n                <div>\r\n                    <label>Second Name</label>\r\n                    <input {...bindLastName} type='text'/> \r\n                </div>\r\n                <button >Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserForm\r\n","import React from 'react'\r\nimport DocTitleOne from './components/DocTitleOne'\r\nimport DocTitleTwo from './components/DocTitleTwo'\r\nimport CounterOne from './components/CounterOne'\r\nimport CounterTwo from './components/CounterTwo'\r\nimport UserForm from './components/UserForm'\r\n\r\n/*\r\n    * Custom hook is basically a javascript function whose name starts with 'use'\r\n    * A custom hook can also call other hook if required\r\n    * Why custom hooks? \r\n            - Share logic - Alternative to HOCs and render props\r\n\r\n*/\r\n\r\nconst CustomIndex = () => {\r\n    return (\r\n        <div className='container'>\r\n            <h1>Custom Hooks</h1>\r\n            <div>\r\n                <h2>First Custom Hook Example</h2>\r\n                <DocTitleOne/>\r\n                <DocTitleTwo/>\r\n            </div>\r\n            <div>\r\n                <h2>Second Custom Hook Example</h2>\r\n                <CounterOne/>\r\n                <CounterTwo/>\r\n            </div>\r\n            <div>\r\n                <h2>Third Custom Hook Example</h2>\r\n                <UserForm/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomIndex\r\n","import React, {useEffect} from 'react';\r\n\r\nconst data = {\"collected\":[{\"collectedDate\":\"2020-12-11\",\"totalCollectedPoints\":0},{\"collectedDate\":\"2020-12-11\",\"totalCollectedPoints\":88.39},{\"collectedDate\":\"2020-12-11\",\"totalCollectedPoints\":90.06},{\"collectedDate\":\"2020-12-11\",\"totalCollectedPoints\":85.76},{\"collectedDate\":\"2020-12-11\",\"totalCollectedPoints\":92.63},{\"collectedDate\":\"2020-12-11\",\"totalCollectedPoints\":60.54},{\"collectedDate\":\"2020-12-11\",\"totalCollectedPoints\":51.64},{\"collectedDate\":\"2020-12-14\",\"totalCollectedPoints\":8.33},{\"collectedDate\":\"2020-12-14\",\"totalCollectedPoints\":92.46},{\"collectedDate\":\"2020-12-14\",\"totalCollectedPoints\":47.14},{\"collectedDate\":\"2020-12-14\",\"totalCollectedPoints\":74.85},{\"collectedDate\":\"2020-12-14\",\"totalCollectedPoints\":16.78},{\"collectedDate\":\"2020-12-14\",\"totalCollectedPoints\":98.04}],\"redeemed\":[{\"redeemedDate\":\"2020-12-11\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-11\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-11\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-11\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-11\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-11\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-14\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-14\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-14\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-14\",\"totalRedeemedPoints\":10},{\"redeemedDate\":\"2020-12-14\",\"totalRedeemedPoints\":10}]};\r\n\r\nconst JSTesting = () => {\r\n\r\n    const testingFunction = () => {\r\n\r\n        // Converting object to an array\r\n        const zoo = {\r\n            lion: '🦁',\r\n            panda: '🐼',\r\n          };\r\n        const zooObjKeys =  Object.keys(zoo);\r\n          // ['lion', 'panda']\r\n          \r\n        const zooObjValues =  Object.values(zoo);\r\n          // ['🦁', '🐼']\r\n          \r\n        const zooObjentries = Object.entries(zoo);\r\n          // [ ['lion', '🦁'], ['panda', '🐼'] ]\r\n\r\n        console.log('zooObjKeys', zooObjKeys);\r\n        console.log('zooObjValues', zooObjValues);\r\n        console.log('zooObjentries', zooObjentries);\r\n\r\n        // Looping over objects -- This is a older way to looping through object. But now we have Object.entries, Object.keys and Object.values\r\n        var numbers = {\r\n            one: 1,\r\n            two: 2,\r\n          };\r\n          \r\n        const keys = [];\r\n          \r\n          for (var number in numbers) {\r\n            if (numbers.hasOwnProperty(number)) {\r\n              keys.push(number);\r\n            }\r\n          }\r\n          \r\n        console.log('keys' , keys); // [ 'one', 'two' ]\r\n\r\n        // Object entries + Destructuring\r\n        const numbers1 = {\r\n            one: 1,\r\n          };\r\n          \r\n          const objectArray = Object.entries(numbers1);\r\n          \r\n          objectArray.forEach(([key, value]) => {\r\n            console.log(key); // 'one'\r\n            console.log(value); // 1\r\n          });\r\n\r\n        // Convert Array back to an object \r\n        const array = [\r\n            ['one', 1],\r\n            ['two', 2],\r\n          ];\r\n          \r\n        const backObj = Object.fromEntries(array);\r\n        console.log(backObj);\r\n          // { one: 1, two: 2 }\r\n    };\r\n\r\n    const testingFunction2 = () => {\r\n        // Converting a Map to an object --- this is not working\r\n        var object = {}\r\n        var map = new Map([ \r\n            [ \"a\", \"one\"], \r\n            [ \"b\" , \"two\"], \r\n            [ \"c\", \"three\"]\r\n            //[ \"d\" : new Map([ [ \"e\": \"four\"] ]) ]\r\n            ])\r\n     \r\n            const mapToObject = (object, map) => {\r\n                for(let[key,value] of map) { object[key] = value }\r\n            }\r\n        console.log(JSON.stringify(mapToObject(object, map), null, ' '));\r\n\r\n\r\n        //Converting an object to a Map\r\n        const o3 = {\r\n            \"a\": \"one\",\r\n            \"b\": \"two\",\r\n            \"c\": \"three\",\r\n            \"d\": { \"e\": \"four\"}\r\n        };\r\n  \r\n\r\n        function objectToMap(o) {\r\n            let m = new Map()\r\n            for(let k of Object.keys(o)) {\r\n                if(o[k] instanceof Object) {\r\n                    m.set(k, objectToMap(o[k]))   \r\n                }\r\n                else {\r\n                    m.set(k, o[k])\r\n                }    \r\n            }\r\n            return m\r\n        }\r\n  \r\n        var m2 = objectToMap(o3);\r\n        console.log(m2.get(\"d\").get(\"e\"));\r\n        console.log(m2);\r\n    };\r\n\r\n    const testingFunction3 = () => {\r\n        //convert nested array pairs to objects in an array\r\n        const arr = [\r\n            [\r\n               ['firstName', 'Joe'],\r\n               ['lastName', 'Blow'],\r\n               ['age', 42],\r\n               ['role', 'clerk'],\r\n               [\r\n                  ['firstName', 'Mary'],\r\n                  ['lastName', 'Jenkins'],\r\n                  ['age', 36],\r\n                  ['role', 'manager']\r\n               ]\r\n            ]\r\n         ];\r\n\r\n         const convertToObject = (arr = []) => {\r\n            const empty = {};\r\n            const res = arr.map(el => {\r\n               const object = {};\r\n               el.forEach(attr => {\r\n                  let name = attr[0], value = attr[1];\r\n                  object[name] = value;\r\n                  return object;\r\n               }, object);\r\n               return object;\r\n            }, empty);\r\n            return res;\r\n         }\r\n         console.log(convertToObject(arr));\r\n\r\n         //Output\r\n        //  [\r\n        //     {\r\n        //        firstName: 'Joe',\r\n        //        lastName: 'Blow',\r\n        //        age: 42,\r\n        //        role: 'clerk',\r\n        //        'firstName,Mary': [ 'lastName', 'Jenkins' ]\r\n        //     }\r\n        //  ]\r\n\r\n    };\r\n\r\n    const testingFunction4 = () => {\r\n        //Convert object of objects to array\r\n        const playerRating = {\r\n            'V Kohli':{\r\n                  batting: 99,\r\n               fielding: 99\r\n            },\r\n            'R Sharma':{\r\n               batting: 98,\r\n               fielding: 95\r\n            },\r\n            'S Dhawan':{\r\n               batting: 92,\r\n               fielding: 90\r\n            }\r\n         }\r\n         const objArray = [];\r\n         Object.keys(playerRating).forEach(key => objArray.push({\r\n            name: key,\r\n            rating: playerRating[key]\r\n         }));\r\n         console.log(objArray);\r\n\r\n         // Output\r\n        //  [\r\n        //     { name: 'V Kohli', rating: { batting: 99, fielding: 99 } },\r\n        //     { name: 'R Sharma', rating: { batting: 98, fielding: 95 } },\r\n        //     { name: 'S Dhawan', rating: { batting: 92, fielding: 90 } }\r\n        //  ]\r\n\r\n    }\r\n\r\n    const testingFunction5 = () => {\r\n        // Enterprise loyalty analytics- chart data format \r\n        const transformedCollected=data.collected.reduce((result,{collectedDate,totalCollectedPoints=0})=>{\r\n\r\n            result[collectedDate]={date:collectedDate,collected:totalCollectedPoints,redeemed:0}\r\n            return result;\r\n            },{})\r\n\r\n            console.log(transformedCollected);\r\n            \r\n            const transformed=data.redeemed.reduce((result,{redeemedDate,totalRedeemedPoints})=>{\r\n            if(result[redeemedDate]){\r\n            result[redeemedDate].redeemed=totalRedeemedPoints;\r\n            }else{\r\n            result[redeemedDate]={\r\n            date:redeemedDate,\r\n            collected:0,\r\n            redeemed:totalRedeemedPoints\r\n            };\r\n            }\r\n            \r\n            return result;\r\n            \r\n            },transformedCollected)\r\n            \r\n            console.log(transformed);\r\n\r\n            const transformedArray = Object.values(transformed);\r\n\r\n            console.log(transformedArray);\r\n    }\r\n\r\n    const testingFunction6 = () => {\r\n        //Iterate over objects\r\n        // 1st case\r\n        const obj = { a: 1, b: 2 };\r\n\r\n        for (const key in obj) {\r\n            console.log(\"key\", key);\r\n            console.log(\"value\", obj[key]);\r\n        }\r\n\r\n        // 2nd case\r\n        const user = {\r\n            name : 'Supuni',\r\n            age : 45,\r\n            scl : 'FHS'\r\n        }\r\n        const ageExists = Object.keys(user).includes(\"age\");\r\n        console.log('ageExists ? ', ageExists);\r\n\r\n        // 3rd case\r\n        const values = Object.keys(user).map((key) => user[key]);\r\n        console.log(values);\r\n\r\n        // 4th case\r\n        Object.keys(user).map((key) => console.log('Test: ', user[key]));\r\n\r\n        // 5th case\r\n        const monthlyExpenses = {\r\n            food: 400,\r\n            rent: 1700,\r\n            insurance: 550,\r\n            internet: 49,\r\n            phone: 95,\r\n          };\r\n\r\n          const monthlyTotal = Object.values(monthlyExpenses).reduce((acc, expense) => acc + expense,\r\n            0);\r\n          \r\n          console.log('Monthly Total : ' , monthlyTotal);\r\n\r\n          // 6th case\r\n          const users = {\r\n            \"1\": {\r\n              name: \"John\",\r\n              age: 29,\r\n            },\r\n            \"2\": {\r\n              name: \"Jane\",\r\n              age: 42,\r\n            },\r\n            \"3\": {\r\n              name: \"Fred\",\r\n              age: 17,\r\n            },\r\n          };\r\n\r\n          const objEntries = Object.entries(users)\r\n\r\n          console.log(objEntries);\r\n          console.log(objEntries[0]);\r\n\r\n          objEntries.map((key) => console.log('Test1: ', key[0], 'Test2: ',  key[1]));\r\n\r\n          // 7th case : Replacing MAP/ FILTER with a single REDUCE\r\n\r\n          const usersOver20 = Object.entries(users).reduce((acc, [id, user]) => {\r\n            if (user.age > 20) {\r\n                acc.push({ ...user, id })\r\n            }\r\n            return acc;\r\n          }, []);\r\n\r\n          console.log(usersOver20);\r\n\r\n          // Output\r\n        //   [\r\n        //       {\r\n        //           name : 'John',\r\n        //           age : 29,\r\n        //           id : '1'\r\n        //     },\r\n        //     {\r\n        //         name : 'Jane',\r\n        //         age : 42,\r\n        //         id : '2'\r\n        //     }\r\n        //   ]\r\n    }\r\n\r\n    const testingFunction7 = () => {\r\n        // Convert array of objects to an object of arrays\r\n        const nights = [\r\n            { \"2016-06-25\": 32, \"2016-06-26\": 151, \"2016-06-27\": null },\r\n            { \"2016-06-24\": null, \"2016-06-25\": null, \"2016-06-26\": null },\r\n            { \"2016-06-26\": 11, \"2016-06-27\": 31, \"2016-06-28\": 31 },\r\n         ];\r\n\r\n         const arrayToObject = (arr = []) => {\r\n            const res = {};\r\n            for(let i = 0; i < arr.length; i++){\r\n               const keys = Object.keys(arr[i]);\r\n               for(let j = 0; j < keys.length; j++){\r\n                  if(res.hasOwnProperty(keys[j])){\r\n                     res[keys[j]].push(arr[i][keys[j]]);\r\n                  }\r\n                  else{\r\n                     res[keys[j]] = [arr[i][keys[j]]];\r\n                  }\r\n               }\r\n            };\r\n            return res;\r\n         };\r\n         console.log(arrayToObject(nights));\r\n\r\n         // OUTPUT\r\n        //  {\r\n        //     '2016-06-25': [ 32, null ],\r\n        //     '2016-06-26': [ 151, null, 11 ],\r\n        //     '2016-06-27': [ null, 31 ],\r\n        //     '2016-06-24': [ null ],\r\n        //     '2016-06-28': [ 31 ]\r\n        //  }\r\n\r\n\r\n       \r\n\r\n    }\r\n\r\n    const testingFunction8 = () => {\r\n        //Group objects inside the nested array\r\n\r\n        const parentArray = [[\r\n            {\r\n               key: 123,\r\n               value: 'India'\r\n            }, {\r\n               key: 124,\r\n               value: 'USA'\r\n            }, {\r\n               key: 125,\r\n               value: 'Japan'\r\n            }, {\r\n               key: 126,\r\n               value: 'Denmark'\r\n            }, {\r\n                  key: 127,\r\n               value: 'Austria'\r\n            },\r\n         ], [\r\n            {\r\n               key: 124,\r\n               value: 'Kenya'\r\n            }, {\r\n               key: 126,\r\n               value: 'UK'\r\n            }, {\r\n               key: 123,\r\n               value: 'Germany'\r\n            }, {\r\n               key: 127,\r\n               value: 'Spain'\r\n            }, {\r\n               key: 125,\r\n               value: 'Portugal'\r\n            },\r\n         ]];\r\n\r\n        const map = {};\r\n        parentArray.forEach(arr => {\r\n            arr.forEach(obj => {\r\n                const { key, value } = obj;\r\n                if(map[key]){\r\n                    map[key].push(value);\r\n                }else{\r\n                    map[key] = [value]\r\n                }\r\n            })\r\n        });\r\n        console.log(map);\r\n\r\n        const data2 = [\r\n         {\r\n           rewardId : 1,\r\n           date: \"Dec-12\",\r\n           count: 12\r\n         },\r\n         {\r\n           rewardId: 2,\r\n           date: \"Dec-14\",\r\n           count: 34\r\n         },\r\n         {\r\n           rewardId : 3,\r\n           date: \"Dec-15\",\r\n           count : 45\r\n         },\r\n         {\r\n            rewardId : 3,\r\n            date: \"Dec-12\",\r\n            count : 24\r\n          },\r\n          {\r\n            rewardId : 3,\r\n            date: \"Dec-14\",\r\n            count : 100\r\n          },\r\n          {\r\n            rewardId : 4,\r\n            date: \"Dec-14\",\r\n            count : 500\r\n          }\r\n       ];\r\n\r\n       const transformedTest=data2.reduce((result,{rewardId,date, count})=>{\r\n\r\n         result[date]={date:date, [rewardId]: count}\r\n         return result;\r\n         },{})\r\n\r\n         console.log(transformedTest);\r\n         \r\n         const transformedTest2=data2.reduce((result,{rewardId,date, count})=>{\r\n         if(result[date] && !result[rewardId]){\r\n            result[date][rewardId]=count;\r\n         }else{\r\n            result[date]={\r\n               date:date,\r\n               [rewardId]: count\r\n            }\r\n         };\r\n         \r\n         return result;\r\n         \r\n         },transformedTest);\r\n         \r\n         console.log(transformedTest2);\r\n\r\n         const transformedArray = Object.values(transformedTest2);\r\n\r\n         console.log(transformedArray);\r\n\r\n         const test2 = Object.values(data2);\r\n         console.log('Test 2', Object.values(test2));\r\n\r\n         const rewardRedeemed = test2.reduce((result, {rewardId}) => {\r\n            result.push(rewardId);\r\n            return result;\r\n          }, []);\r\n\r\n          console.log('Test 22', rewardRedeemed);\r\n\r\n          const rewardRedeemed1 = data2.reduce((result, {rewardId}) => {\r\n            result.push({key : rewardId});\r\n            return result;\r\n          }, []);\r\n\r\n          console.log('Test 222', rewardRedeemed1);\r\n\r\n          const finale = (data, key) => {\r\n             return [\r\n                ... new Map(\r\n                   data.map(x => [key(x), x])\r\n                ).values()\r\n             ]\r\n          }\r\n\r\n         const finale11 = finale(rewardRedeemed1, line => line.key)\r\n\r\n          console.log(finale(rewardRedeemed1, line => line.key));\r\n          console.log(JSON.stringify(finale(rewardRedeemed1, it => it.key)));\r\n\r\n      //  const output = [\r\n      //     {\r\n      //       \"rewardId\": data2.count,\r\n      //       \"date\": \"Dec-12\",\r\n      //     }\r\n      //  ]\r\n    }\r\n\r\n    const testingFunction9 = () => {\r\n\r\n        //Convert array of arrays to array of objects grouped together\r\n        const data = [\r\n            ['orange', 'fruit'],\r\n            ['red', 'color'],\r\n            ['green', 'color'],\r\n            ['orange', 'color'],\r\n            ['banana', 'fruit'],\r\n            ['blue', 'color'],\r\n            ['lemon', 'fruit'],\r\n            ['mango', 'fruit'],\r\n            ['lemon', 'color'],\r\n         ];\r\n\r\n         const groupData = arr => {\r\n            return arr.reduce((acc, val) => {\r\n               const [value, groupName] = val;\r\n               const groupIndex = acc.findIndex(el => el?.group === groupName);\r\n               if(groupIndex !== -1){\r\n                  acc[groupIndex].value.push(value);\r\n               }else{\r\n                  acc.push({\r\n                     group: groupName,\r\n                     value: [value]\r\n                  });\r\n               }\r\n               return acc;\r\n            }, []);\r\n         };\r\n         console.log(groupData(data));\r\n\r\n         // OUTPUT \r\n        //  [\r\n        //     { group: 'fruit', value: [ 'orange', 'banana', 'lemon', 'mango' ] },\r\n        //     {\r\n        //        group: 'color',\r\n        //        value: [ 'red', 'green', 'orange', 'blue', 'lemon' ]\r\n        //     }\r\n        //  ]\r\n\r\n\r\n         \r\n    }\r\n\r\n    const testingFunction10 = () => {\r\n        //convert array into array of objects using map() and reduce() \r\n        const arr = [\r\n            [\r\n               ['juice', 'apple'], ['maker', 'motts'], ['price', 12]\r\n            ],\r\n            [\r\n               ['juice', 'orange'], ['maker', 'sunkist'], ['price', 11]\r\n            ]\r\n         ];\r\n\r\n         const arrayToObject = arr => {\r\n            let res = [];\r\n            res = arr.map(list => {\r\n               return list.reduce((acc, val) => {\r\n                  acc[val[0]] = val[1];\r\n                  return acc;\r\n               }, {});\r\n            });\r\n            return res;\r\n         };\r\n         console.log(arrayToObject(arr));\r\n\r\n         // OUTPUT\r\n        //  [\r\n        //     { juice: 'apple', maker: 'motts', price: 12 },\r\n        //     { juice: 'orange', maker: 'sunkist', price: 11 }\r\n        //  ][\r\n        //     { juice: 'apple', maker: 'motts', price: 12 },\r\n        //     { juice: 'orange', maker: 'sunkist', price: 11 }\r\n        //  ]\r\n    }\r\n\r\n    const testingFunction11 = () => {\r\n      // 6 ways to remove duplicates from an array \r\n\r\n      // 1st way - Use teh filter method\r\n      const arr = ['banana' , 'apple', 'orange', 'lemon', 'apple', 'lemon']\r\n      const removeDuplicateData = (arr) => {\r\n        return arr.filter((value, index) => arr.indexOf(value) === index);\r\n      }\r\n      console.log('Original array method 1 : ', arr);\r\n      console.log('Remove dulication from array method 1 : ', removeDuplicateData(arr));\r\n\r\n        //Getting duplicate values\r\n        const duplicateData = (arr) => {\r\n          return arr.filter((value, index) => arr.indexOf(value) !== index);\r\n        }\r\n        console.log('Getting duplicate data method 1 : ', duplicateData(arr));\r\n\r\n      // 2nd way - By using a Set\r\n      // Sets are a new object type with ES6 that allows you to create collections of unique values\r\n\r\n      const removeDuplicate2 = (arr) => {\r\n        return [...new Set(arr)]\r\n      }\r\n\r\n      console.log('Remove dulication from array method 2 : ', removeDuplicate2(arr));\r\n\r\n      // 3rd way - Using the forEach method\r\n      const removeDuplicate3 = (arr) => {\r\n        const unique = [];\r\n        arr.forEach(element => {\r\n          if(!unique.includes(element)){\r\n            unique.push(element)\r\n          }\r\n        });\r\n        return unique;\r\n      }\r\n\r\n      console.log('Remove dulication from array method 3 : ', removeDuplicate3(arr));\r\n\r\n      // 4th way - By using reduce method\r\n      //The reduce method is used to reduce the elements of the array and combine them into a final array based on some reducer function that you pass.\r\n\r\n      const removeDuplicate4 = (arr) => {\r\n        return arr.reduce((result, curr) => result.includes(curr) ? result : [...result, curr], []);\r\n      }\r\n      console.log('Remove dulication from array method 4 : ', removeDuplicate4(arr));\r\n\r\n      // 5th way - By using underscore JS\r\n      // _.uniq method produces a duplicate-free version of the array, and also we can sort this array by passing the second parameter is true.\r\n      // However this gives error - _is not defined\r\n\r\n      //const removeDuplicateResult = _.uniq(arr, false);\r\n     // const removeDuplicateWithSort = _.uniq(arr, true);\r\n\r\n     // console.log('Remove dulication from array method 5 : ', removeDuplicateResult);\r\n     // console.log('Remove dulication from array method 5 with sort : ', removeDuplicateWithSort);\r\n\r\n     // 6th way - Removing Duplicate Objects from a Given Array\r\n      const users = [\r\n        {\r\n          name : 'Supuni',\r\n          age : 25,\r\n          address : 'Ad1'\r\n        },\r\n        {\r\n          name : 'Nipuni',\r\n          age : 12,\r\n          address : 'Ad2'\r\n        },\r\n        {\r\n          name : 'Supuni',\r\n          age : 20,\r\n          address : 'Ad1'\r\n        },\r\n        {\r\n          name : 'Supuni',\r\n          age : 20,\r\n          address : 'Ad1'\r\n        },\r\n        {\r\n          name : 'Sandy',\r\n          age : 18,\r\n          address : 'Ad1'\r\n        }\r\n      ];\r\n\r\n      const uniqueObjectsFromArray = (data, key) => {\r\n        return [\r\n          ...new Map(\r\n            data.map(x => [key(x), x])\r\n          ).values()\r\n        ]\r\n      }\r\n\r\n      console.log('Get unique objects from array 1 :', uniqueObjectsFromArray(users, user => user.name));\r\n      console.log('Get unique objects from array 2 :', uniqueObjectsFromArray(users, user => user.age));\r\n      console.log('Get unique objects from array 3 :', uniqueObjectsFromArray(users, user => user.address));\r\n      console.log('Get unique objects from array - JSON Stringfy :', JSON.stringify(uniqueObjectsFromArray(users, user => user.name)));\r\n    }\r\n\r\n    const testingFunction12 = () => {\r\n      // Merge Sort \r\n\r\n      const arr = [6,5,3,1,8,7,2,4]\r\n\r\n      console.log(\"Original: \", arr)\r\n\r\n      //Merge sort using recursion\r\n      function mergeSortRecursion(unsortedArray) {\r\n\t      //There's no need to split/merge if there's only one element\r\n\t      if (unsortedArray.length <= 1)\r\n\t        {\r\n\t\t        return unsortedArray;\r\n\t        }\r\n\r\n\t        //Now we divide the array in half\r\n\t        //we first need to find the middle point\r\n\t        //We use Math.floor to avoid decimals in an odd length array\r\n\t        const midPoint = Math.floor(unsortedArray.length / 2);\r\n\r\n\t        //Now we get the left and right part of the array\r\n\t        const leftArr = unsortedArray.slice(0, midPoint);\r\n\t        const rightArr = unsortedArray.slice(midPoint);\r\n\r\n\t        //Now we merge the two arrays using recursion to keep finding the left and right array.\r\n\t      return mergeTwoArrays(mergeSortRecursion(leftArr), mergeSortRecursion(rightArr));\r\n      }\r\n\r\n    //Merge two arrays assuming both is already organized\r\n    function mergeTwoArrays(leftArr, rightArr) {\r\n      console.log(\"Merging: \", leftArr, rightArr)\r\n      \r\n\t    //We first make an var where we push the values into from the both array.\r\n\t    let resultArray = [];\r\n\t    //We also make two more index keeping track of the position of left and right array\r\n\t    //Since both arrays are organized, we'll move from the smallest number to the largest.\r\n\t    let leftIndex = 0, rightIndex = 0;\r\n\r\n\t    //We will keep merging as long as there's still numbers from any of the array unadded\r\n\t    while (leftIndex < leftArr.length &&\r\n\t\t\t  rightIndex < rightArr.length)\r\n\t    {\r\n\t\t    //If the value on the left array is lower, we add that one into the result\r\n\t\t    if (leftArr[leftIndex] < rightArr[rightIndex])\r\n\t\t    {\r\n\t\t\t    console.log(\"Left is Smaller, we add \", leftArr[leftIndex], \"from index\", leftIndex)\r\n\t\t\t    resultArray.push(leftArr[leftIndex]);\r\n\t\t\t    leftIndex++; //Since we added the value from left index, lets increment it.\r\n\t\t    } //Otherwise, we add in the value of the right array.\r\n\t\t    else\r\n\t\t    {\r\n\t\t\t    console.log(\"Right is Smaller, we add \", rightArr[rightIndex], \"from index\", rightIndex)\r\n\t\t\t    resultArray.push(rightArr[rightIndex]);\r\n\t\t\t    rightIndex++; //Since we added the value from right index, lets increment it.\r\n\t\t    }\r\n\t    }\r\n\r\n\t    console.log(\"After while, LeftIndex: \", leftIndex, \" RightIndex: \", rightIndex)\r\n\r\n\t    //However once one side is all finished, the other array is untouched\r\n\t    //So lets start by checking if it's the left side undefined and add it to the result\r\n\t    if (leftArr[leftIndex])\r\n\t    {\t\r\n\t\t    //We first start by getting all the unadded elements on the left\r\n\t\t    var unaddedElements = leftArr.slice(leftIndex)\r\n\t\t      console.log(\"Left unadded: \", unaddedElements)\r\n\t\t    //Then we push in the unadded elements using the spread operator\r\n\t\t    resultArray.push(...unaddedElements); \r\n\t    } //If it's not left, then it's for sure the right array\r\n\t    else\r\n\t    {\r\n\t\t    //We first start by getting all the unadded elements on the right\r\n\t\t    var unaddedElements = rightArr.slice(rightIndex)\r\n\t\t    console.log(\"Right unadded: \", unaddedElements)\r\n\t\t    //Then we push in the unadded elements using the spread operator\r\n\t\t    resultArray.push(...unaddedElements); \r\n\t  }\r\n\r\n\t    console.log(\"Final Arr: \", resultArray);\r\n\t    console.log(\"\"); //Creating an empty Line break for easy of eye in console\r\n\t    return resultArray;\r\n    }\r\n\r\n    const result = mergeSortRecursion(arr);\r\n    console.log(\"Result:\", result);\r\n    }\r\n\r\n    const testingFunction13 = () => {\r\n      // Merge arrays\r\n\r\n      // 1st way - Using the loop\r\n      const mergeArrays = (fromArray, toArray) => {\r\n        for(let i = 0, len = fromArray.length; i < len; i++) {\r\n               toArray.push(fromArray[i]);\r\n        }\r\n         return toArray;\r\n      }\r\n   \r\n      const array1 = [1,2,3,4,5];\r\n      const array2= [6,7,8,9,10];\r\n      const array3 = [];\r\n\r\n      const mergeArraysResult1 = mergeArrays(array1, array3);\r\n      console.log('Merge arrays result 1 :', mergeArraysResult1);\r\n      console.log('Array 3:', array3);\r\n\r\n      const mergeArraysResult2 = mergeArrays(array2, array3);\r\n      console.log('Merge arrays result 2: ', mergeArraysResult2);\r\n\r\n      //Using spread operator\r\n      const array4 = ['a','b','c','d','e'];\r\n      const array5 = [10,20,30,40,50];\r\n      const array6 = [...array4, ...array5];\r\n\r\n      console.log('Merge using spread operator', array6);\r\n\r\n      const array7 = [];\r\n      array7.push(...array4, ...array5);\r\n\r\n      console.log('Merge using spread operator and push ', array7);\r\n\r\n      const string =\"two\";\r\n      const arrayOfChar = [...string];\r\n\r\n      console.log('Convert string to array : ',arrayOfChar );\r\n\r\n      // 3rd way - Using concat method\r\n\r\n      const a = 'Supuni'\r\n      const b = 24\r\n      const c = {\r\n        name : 'Kasuni',\r\n        who : 'best friend'\r\n      }\r\n      const array8 = [a,b,c]\r\n      const array9 = [6,7,8,9,10];\r\n\r\n      const array10 = array8.concat(array9);\r\n      console.log('Array merge using concat : ', array10);\r\n\r\n      const array11 = [].concat(array8, array9);\r\n      console.log('Array merge using concat 2 : ', array11);\r\n\r\n      // 4th way - Using Reduce method\r\n      var array12 = [1,2,3,4,5];\r\n      var array13 = [6,7,8,9,10];\r\n\r\n      var array14 = array13.reduce((newArray, item) => {\r\n          newArray.push(item);\r\n          return newArray;\r\n\r\n      }, array12);\r\n\r\n      console.log('Merge array using reduce method : ', array14);\r\n    }\r\n\r\n    const testingFunction14 = () => {\r\n        // Merge objects\r\n\r\n        // 1st way - Using spread operator\r\n        let person = {\r\n          firstName: 'John',\r\n          lastName: 'Doe',\r\n          age: 25,\r\n          ssn: '123-456-2356'\r\n        };\r\n      \r\n      \r\n        let job = {\r\n          jobTitle: 'JavaScript Developer',\r\n          location: 'USA'\r\n        };\r\n      \r\n        let employee = {\r\n          ...person,\r\n          ...job\r\n        };\r\n      \r\n       console.log(employee);\r\n\r\n       // OUTPUT\r\n      //  {\r\n      //   firstName: 'John',\r\n      //   lastName: 'Doe',\r\n      //   age: 25,\r\n      //   ssn: '123-456-2356',\r\n      //   jobTitle: 'JavaScript Developer',\r\n      //   location: 'USA'\r\n      // }\r\n\r\n      // If objects have a property with the same name, then the right-most object property overwrites the previous one\r\n\r\n      let job2 = {\r\n        jobTitle: 'JavaScript Developer',\r\n        country: 'USA'\r\n      };\r\n    \r\n      let location = {\r\n        city: 'London',\r\n        country: 'England'\r\n      };\r\n    \r\n      let remoteJob = {\r\n        ...job2,\r\n        ...location\r\n      };\r\n    \r\n      console.log(remoteJob);\r\n      //OUTPUT\r\n      // {\r\n      //   jobTitle: 'JavaScript Developer',\r\n      //   country: 'England',\r\n      //   city: 'London'\r\n      // }\r\n\r\n      // 2nd way -  using Object.assign() method\r\n      let person1 = {\r\n        firstName: 'John',\r\n        lastName: 'Doe',\r\n        age: 25,\r\n        ssn: '123-456-2356'\r\n    };\r\n    \r\n    \r\n    let job3 = {\r\n        jobTitle: 'JavaScript Developer',\r\n        country: 'USA'\r\n    };\r\n    \r\n    \r\n    let employee4 = Object.assign(person1, job3);\r\n    console.log(employee4);\r\n    }\r\n\r\n    const testingFunction15 = () => {\r\n      const friend = {\r\n        details : {\r\n          name : 'Supuni',\r\n          age : 24\r\n        },\r\n        deactive : false\r\n      }\r\n\r\n      const salesData = {\r\n        \"sales\":{ \r\n            \"growth\":0,\r\n            \"value\":13\r\n          },\r\n          \"revenue\":{\r\n            \"growth\":0,\r\n            \"value\":83698\r\n          },\r\n          \"avgBucketSize\":{\r\n            \"growth\":0,\r\n            \"value\":6438.31\r\n          },\r\n          \"repeatPurchases\":{\r\n            \"growth\":0,\r\n            \"value\":0\r\n          }\r\n        };\r\n\r\n      const name1 = friend.details.name;\r\n      console.log('Name :', name1);\r\n      console.log('Sales :', salesData.sales.value); // In this scenario some times we can get 'undefined'\r\n\r\n      // To avoid undefined\r\n      if(friend && friend.details) {\r\n        const name = friend.details.name;\r\n        console.log('Name with avoiding undefined, previous way :', name);\r\n      }\r\n\r\n      // New way - Optional chaining\r\n      const name2 = friend?.details?.name;\r\n      console.log('Name with optional chaining :', name2);\r\n\r\n      // Nullish coalescing - set a default value\r\n      // isActive will be true if user.active is null or undefined but will be false if user.active is falsy.\r\n\r\n      const isActive = friend.active ?? true;\r\n      console.log('Nullish Coalescing operator ?? checking : ', isActive);\r\n\r\n      const isDeactive = friend.deactive ?? true;\r\n      console.log('Nullish Coalescing operator ?? checking2 : ', isDeactive);\r\n\r\n      //Intl.DisplayNames\r\n\r\n      //provides language sensitive string comparison, number formatting, and date and time formatting\r\n\r\n      const regionNames = new Intl.DisplayNames(['es'], {type: 'region'})\r\n        const regionTest1 =  regionNames.of('FR') // 'Francia'\r\n        const regionTest2 = regionNames.of('US') // 'Estados Unidos'\r\n\r\n      const langNames = new Intl.DisplayNames(['fr'], {type: 'language'})\r\n        const langTest1 =  langNames.of('ES') // 'espagnol'\r\n        const langTest2 = langNames.of('EN') // 'anglais'\r\n\r\n      const currencyNames = new Intl.DisplayNames(['zh-Hans'], {type: 'currency'});\r\n        const currencyTest1 =currencyNames.of('USD') // '美元'\r\n        const currencyTest2 = currencyNames.of('EUR') // '欧元'\r\n\r\n        console.log('Test 1', regionTest1);\r\n        console.log('Test 2', regionTest2);\r\n        console.log('Test 3', langTest1);\r\n        console.log('Test 4', langTest2);\r\n        console.log('Test 5', currencyTest1);\r\n        console.log('Test 6', currencyTest2);\r\n\r\n        //Intl.DateTimeFormat options\r\n\r\n        const date = new Date(Date.UTC(2012, 11, 20, 3, 0, 0))\r\n        // British English uses day-month-year order\r\n        console.log(new Intl.DateTimeFormat('en-GB').format(date))\r\n        // \"19/12/2012\"\r\n\r\n        const options = {calendar: 'chinese', numberingSystem: 'arab'}\r\n        const dateFormat = new Intl.DateTimeFormat('default', options)\r\n\r\n        console.log('Testing :', dateFormat);\r\n    }\r\n\r\n    const testingFunction16 = () => {\r\n      // JS builtin functions \r\n\r\n      // toLocaleString\r\n      let date = new Date\r\n      console.log('Date,', date) // Sat Dec 10 2020 10:00:00 GMT-0500 (Eastern Standard Time)\r\n\r\n      //This built in JavaScript function formatted this date into a much more readable, and usable format.\r\n\r\n      let formattedDate = date.toLocaleString(\"en-US\")\r\n      console.log('Formated date',formattedDate); //formattedDate = 12/10/2020, 10:00:00 AM\r\n\r\n      let number = 1000000000;\r\n      let numberWithCommas = number.toLocaleString(\"en-US\");\r\n      console.log('Number with commas :', numberWithCommas);\r\n      //numberWithCommas = \"1,000,000,000\"\r\n\r\n      //toFixed\r\n\r\n      //This function is used to limit the number of digits shown after the decimal place. .toFixed takes in 1 argument, the number of decimal places you want to display. If the argument is omitted, it defaults to 0.\r\n      let decimalNumber = 0.12345\r\n      let noDecimal = decimalNumber.toFixed() // => \"0\"\r\n      let twoDecimals = decimalNumber.toFixed(2) // => \"0.12\"\r\n\r\n      console.log('0.12345 with no decimal values :', noDecimal);\r\n      console.log('0.12345 with 2 decimal values :', twoDecimals);\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n      //   testingFunction();\r\n      //   testingFunction2();\r\n      //   testingFunction3();\r\n      //   testingFunction4();\r\n      //   testingFunction5();\r\n      //   testingFunction6();\r\n      //   testingFunction7();\r\n      //  testingFunction8();\r\n      //   testingFunction9();\r\n      //   testingFunction10();\r\n      // testingFunction11();\r\n      //testingFunction12();\r\n      //testingFunction13();\r\n      //testingFunction14();\r\n      //testingFunction15();\r\n      testingFunction16();\r\n    },[]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>For JS Testing</h1>\r\n            <h4>Test Cases</h4>\r\n            <ol>\r\n                <li>Converting object to an array</li>\r\n                <li>Converting an object to a Map</li>\r\n                <li>convert nested array pairs to objects in an array</li>\r\n                <li>Convert object of objects to array</li>\r\n                <li>Enterprise loyalty analytics- chart data format</li>\r\n                <li>Iterate over objects</li>\r\n                <li>Convert array of objects to an object of arrays</li>\r\n                <li>Group objects inside the nested array</li>\r\n                <li>Convert array of arrays to array of objects grouped together</li>\r\n                <li>convert array into array of objects using map() and reduce() </li>\r\n                <li>6 ways to remove duplicates from an array </li>\r\n                <li>Merge sort example </li>\r\n                <li>Merge arrays </li>\r\n                <li>Merge objects </li>\r\n                <li>Date Manipulations </li>\r\n            </ol>\r\n\r\n            <div>\r\n              <h5>JS type='search'</h5>\r\n              <form>\r\n                <label>Search</label>\r\n                <input type='search' placeholder='search here'/>\r\n                <button type='submit'> Search </button>\r\n              </form>\r\n            </div>\r\n            <div>\r\n            <h5>JS type='text'</h5>\r\n              <form>\r\n                <label>Search</label>\r\n                <input type='text' placeholder='search here'/>\r\n                <button type='submit'> Search </button>\r\n              </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JSTesting\r\n\r\n/*\r\nimport React, { useState, useCallback, useEffect, useContext } from 'react';\r\nimport { Card, ReactVirtualized, ProgressBar } from 'shoutout_themes';\r\nimport ListTypeTableRowRenderer from '../../utils/table/ListTypeTableRowRenderer';\r\nimport OverviewChart from '../utils/OverviewChartCard';\r\nimport ComparisonChart from '../utils/ComparisonChartCard';\r\nimport LineChartWidget from './LineChartWidget';\r\nimport { UserContext } from '../../../Contexts/userContext';\r\nimport { AnalyticsContext } from '../context/AnalyticsContext';\r\nimport { getRewardsCount, getRewardsSeries, getRewardRedemptionSeries, getTopRewards } from '../../../Services';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport { LoadingComponent } from '../../utils/UtilComponents';\r\n\r\nconst { Column, Table, AutoSizer } = ReactVirtualized;\r\nnumeral.nullFormat('N/A');\r\n\r\nconst data2 = [\r\n  {\r\n    rewardId : 1,\r\n    date: \"Dec-12\",\r\n    count: 12\r\n  },\r\n  {\r\n    rewardId : 2,\r\n    date: \"Dec-12\",\r\n    count: 34\r\n  },\r\n  {\r\n    rewardId : 1,\r\n    date: \"Dec-13\",\r\n    count: 44\r\n  },\r\n  {\r\n    rewardId : 2,\r\n    date: \"Dec-13\",\r\n    count: 10\r\n  },\r\n  {\r\n    rewardId : 3,\r\n    date: \"Dec-13\",\r\n    count: 13\r\n  },\r\n  {\r\n    rewardId : 4,\r\n    date: \"Dec-13\",\r\n    count: 20\r\n  },\r\n  {\r\n    rewardId: 2,\r\n    date: \"Dec-14\",\r\n    count: 34\r\n  },\r\n  {\r\n    rewardId : 1,\r\n    date: \"Dec-15\",\r\n    count : 30\r\n  },\r\n  {\r\n    rewardId : 2,\r\n    date: \"Dec-15\",\r\n    count : 23\r\n  },\r\n  {\r\n    rewardId : 3,\r\n    date: \"Dec-15\",\r\n    count : 45\r\n  },\r\n  {\r\n    rewardId : 4,\r\n    date: \"Dec-15\",\r\n    count : 20\r\n  },\r\n  {\r\n     rewardId : 3,\r\n     date: \"Dec-12\",\r\n     count : 24\r\n   },\r\n   {\r\n    rewardId : 4,\r\n    date: \"Dec-12\",\r\n    count : 15\r\n  },\r\n   {\r\n     rewardId : 3,\r\n     date: \"Dec-14\",\r\n     count : 100\r\n   },\r\n   {\r\n    rewardId : 1,\r\n    date: \"Dec-14\",\r\n    count : 0\r\n  },\r\n   {\r\n     rewardId : 4,\r\n     date: \"Dec-14\",\r\n     count : 90\r\n   }\r\n];\r\n\r\nconst finale = (data, key) => {\r\n  return [\r\n     ... new Map(\r\n        data.map(x => [key(x), x])\r\n     ).values()\r\n  ]\r\n};\r\n\r\nconst Rewards = () => {\r\n\r\n  const { isAuth } = useContext(UserContext);\r\n  const { fromDate, toDate, selectedTimePeriod } = useContext(AnalyticsContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [rewardsCount, setRewardsCount] = useState({});\r\n  const [rewardSeries, setRewardSeries] = useState({});\r\n  const [rewardSeriesRedeemed, setRewardSeriesRedeemed] = useState([]);\r\n  const [rewardSeriesClaimed, setRewardSeriesClaimed] = useState([]);\r\n  const [topRewardData, setTopRewardData] = useState([]);\r\n  const [lineOptions, setLineOptions] = useState([]);\r\n  const [lineChartData, setLineChartData] = useState([]);\r\n\r\n  const loadAllData = useCallback(async () => {\r\n\r\n    try {\r\n\r\n      setIsLoading(true);\r\n\r\n      const [rewardSeriesData, rewardCountData, topReward, lineChartData] = await Promise.all([getRewardsSeries({ fromDate, toDate }), getRewardsCount({ fromDate, toDate }), getTopRewards({ fromDate, toDate }), getRewardRedemptionSeries({ fromDate, toDate })]);\r\n      setIsLoading(false);\r\n      setRewardsCount(rewardCountData);\r\n      setRewardSeries(rewardSeriesData);\r\n\r\n      setTopRewardData(topReward);\r\n\r\n      const rewardRedeemed = rewardSeriesData.redeemed.reduce((result, data) => {\r\n        result.push({ key: moment(data[\"date\"]).format(\"MMM-DD\"), rewardCountRedeemed: data.count });\r\n        return result;\r\n      }, []);\r\n\r\n      const rewardClaimed = rewardSeriesData.claimed.reduce((result, data) => {\r\n        result.push({ key: moment(data[\"date\"]).format(\"MMM-DD\"), rewardCountClaimed: data.count });\r\n        return result;\r\n      }, []);\r\n\r\n      setRewardSeriesRedeemed(rewardRedeemed);\r\n      setRewardSeriesClaimed(rewardClaimed);\r\n\r\n      const transformedRewardClaimed = rewardSeriesData.claimed.reduce((result, { date, count = 0 }) => {\r\n\r\n        result[date] = { date: moment(date).format(\"MMM-DD\"), claimed: count, redeemed: 0 }\r\n        return result;\r\n      }, {})\r\n\r\n      const transformed = rewardSeriesData.redeemed.reduce((result, { date, count }) => {\r\n        if (result[date]) {\r\n          result[date].redeemed = count;\r\n        } else {\r\n          result[date] = {\r\n            date: moment(date).format(\"MMM-DD\"),\r\n            claimed: 0,\r\n            redeemed: count\r\n          };\r\n        }\r\n\r\n        return result;\r\n\r\n      }, transformedRewardClaimed)\r\n\r\n      const transformedRewardArray = Object.values(transformed);\r\n\r\n      setRewardSeries(transformedRewardArray);\r\n\r\n      const transformedLineData=data2.reduce((result,{rewardId,date, count})=>{\r\n\r\n        result[date]={date:date, [rewardId]: count}\r\n        return result;\r\n        },{})\r\n\r\n        console.log(transformedLineData);\r\n        \r\n        const transformedLineChartData=data2.reduce((result,{rewardId,date, count})=>{\r\n        if(result[date] && !result[rewardId]){\r\n           result[date][rewardId]=count;\r\n        }else{\r\n           result[date]={\r\n              date:date,\r\n              [rewardId]: count\r\n           }\r\n        };\r\n        \r\n        return result;\r\n        \r\n        },transformedLineData);\r\n        \r\n        console.log(transformedLineChartData);\r\n\r\n        const transformedArray = Object.values(transformedLineChartData);\r\n\r\n        console.log(transformedArray);\r\n\r\n        const transformLines = data2.reduce((result, {rewardId}) => {\r\n          result.push({key : rewardId});\r\n          return result;\r\n        }, []);\r\n\r\n      const lineChartLineOptions = finale(transformLines, line => line.key)\r\n\r\n      setLineChartData(transformedArray);\r\n      setLineOptions(lineChartLineOptions);\r\n\r\n\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n  }, [setRewardsCount, setRewardSeriesRedeemed, setRewardSeriesClaimed, setRewardSeries, setTopRewardData, fromDate, toDate]);\r\n\r\n  useEffect(() => {\r\n    if (isAuth && fromDate) {\r\n      loadAllData();\r\n    }\r\n\r\n  }, [isAuth, fromDate, toDate]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <h4 className=\"font-weight-bold\">Rewards</h4>\r\n        <Card className=\"p-4 mb-4\">\r\n          <h6>Top Rewards</h6>\r\n          {\r\n            isLoading ?\r\n              <LoadingComponent />\r\n              :\r\n              <>\r\n                {\r\n                  topRewardData.length > 0 ?\r\n                    <div className=\"d-flex justify-content-start\">\r\n                      {\r\n                        topRewardData.map((reward, rewardIndex) => {\r\n                          return (\r\n                            <div key={`r-${rewardIndex}`}>\r\n                              <img\r\n                                src={reward.imageUrls[0]}\r\n                                alt='presentage'\r\n                                style={{ width: '120px', height: '100px', borderRadius: '10%' }}\r\n                                className='m-3'\r\n                              />\r\n                              <h6 className='text-center'>{reward.name}</h6>\r\n                            </div>\r\n                          )\r\n                        })\r\n                      }\r\n                    </div>\r\n                    : <p className='no-rewards-text mb-0'> No top rewards found </p>\r\n                }\r\n              </>\r\n          }\r\n        </Card>\r\n        <div className='d-flex justify-content-between'>\r\n          <Card className=\"mr-4 w-50\">\r\n            {isLoading ?\r\n              <LoadingComponent /> :\r\n              <OverviewChart\r\n                title='Redeemed Rewards'\r\n                amount={numeral(rewardsCount.redeemed?.count).format('0a')}\r\n                presentage={`${numeral(rewardsCount.redeemed?.growth).format('0a')}% vs ${selectedTimePeriod}`}\r\n                data={rewardSeriesRedeemed}\r\n                barOptions={{ xAxis: { key: \"key\", type: \"category\" }, bar: [{ key: 'rewardCountRedeemed' }] }}\r\n                color='#8884d8'\r\n              />\r\n            }\r\n          </Card>\r\n          <Card className=\"w-50\">\r\n            {isLoading ?\r\n              <LoadingComponent /> :\r\n              <OverviewChart\r\n                title='Claimed Rewards'\r\n                amount={numeral(rewardsCount.claimed?.count).format('0a')}\r\n                presentage={`${numeral(rewardsCount.claimed?.growth).format('0a')}% vs ${selectedTimePeriod}`}\r\n                data={rewardSeriesClaimed}\r\n                barOptions={{ xAxis: { key: \"key\", type: \"category\" }, bar: [{ key: 'rewardCountClaimed' }] }}\r\n                color='#64dbfe'\r\n              />\r\n            }\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <Card className='p-4 mb-3'>\r\n        {isLoading ?\r\n          <LoadingComponent /> :\r\n          <ComparisonChart\r\n            title='Claimed and Redeemed Rewards'\r\n            data={rewardSeries}\r\n            barOptions={{ yAxis: { type: \"number\", allowDecimals: false }, xAxis: { key: \"date\", type: \"category\" }, bar: [{ key1: 'claimed', key2: 'redeemed' }] }}\r\n          />\r\n        }\r\n      </Card>\r\n      <Card className='p-4 mb-3'>\r\n        {isLoading ?\r\n          <LoadingComponent /> :\r\n          <>\r\n            <h5>Rewards</h5>\r\n            {\r\n              lineChartData.length > 0 ?\r\n                <div style={{ marginLeft: '-2.5rem' }}>\r\n                  <LineChartWidget\r\n                    data={lineChartData}\r\n                    //lineOptions={{ yAxis: { type: \"number\", allowDecimals: false }, lines: [{ key: 'uv', type: \"step\" },{key: 'pv', type: \"step\" }] }}\r\n                    //lineOptions={{ xAxis: { key: \"name\" }, line: [{ key1: 'uv', key2: 'pv', type: \"step\" }] }}\r\n                    lineOptions={lineOptions}\r\n                  />\r\n                </div>\r\n                :\r\n                <img src=\"/assets/images/defaultImages/Graph 01.svg\" className=\"img-fluid p-4\" alt='default graph' />\r\n            }\r\n          </>\r\n        }\r\n      </Card>\r\n      <Card className='p-4 mb-3' style={{ width: '100%' }}>\r\n        <h6>Rewards</h6>\r\n        <div className=\"h-100 my-3\">\r\n          <AutoSizer disableHeight>\r\n            {({ width }) => (\r\n              <Table\r\n                disableHeader={false}\r\n                headerHeight={55}\r\n                height={400}\r\n                // headerClassName=\"px-3\"\r\n                rowHeight={100}\r\n                rowGetter={({ index }) => topRewardData[index]}\r\n                rowClassName={({ index }) => index === -1 ? \"px-3 cursor-pointer-hover\" : \"cursor-pointer-hover\"}\r\n                rowCount={topRewardData.length || 0}\r\n                // sortBy={sortBy}\r\n                // sortDirection={sortDirection}\r\n                width={width}\r\n                //sort={sort}\r\n                rowRenderer={ListTypeTableRowRenderer}\r\n                noRowsRenderer={() => {\r\n                  return isLoading ? <LoadingComponent /> : <div className=\"text-center\">No data found.</div>;\r\n                }}\r\n              >\r\n\r\n                <Column\r\n                  label=\"Reward\"\r\n                  dataKey='name'\r\n                  width={150}\r\n                  flexGrow={1}\r\n                  cellRenderer={({ rowData }) => (\r\n                    <p className=\"mb-0\">{rowData.name}</p>\r\n                  )\r\n                  }\r\n                />\r\n                <Column\r\n                  label=\"\"\r\n                  dataKey=''\r\n                  width={600}\r\n                  flexGrow={1}\r\n                  cellRenderer={({ rowData }) => (\r\n                    <ProgressBar variant='primary' now={rowData.percentage} />\r\n                  )\r\n                  }\r\n                />\r\n                <Column\r\n                  label=\"Amount\"\r\n                  dataKey=''\r\n                  width={20}\r\n                  flexGrow={1}\r\n                  cellRenderer={({ rowData }) => (\r\n                    <div className=\"mb-0 text-center\">\r\n                      <p className=\"mb-0\">{numeral(rowData.totalRedeemedCount).format('0a')}</p>\r\n                      <small className='text-muted mb-0 '>{`${numeral(rowData.percentage).format('0a')}%`}</small>\r\n                    </div>\r\n                  )\r\n                  }\r\n                />\r\n\r\n              </Table>\r\n            )}\r\n          </AutoSizer>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Rewards\r\n*/\r\n\r\n/*\r\nimport React from 'react';\r\nimport {ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst LineChartWidget = ({data, lineOptions =  [] }) => {\r\n    return (\r\n        <ResponsiveContainer\r\n            width=\"100%\"\r\n            height={400}\r\n            margin={{ top: 0, right: 10, left: 10, bottom: 0 }}\r\n        >\r\n            <LineChart\r\n                width={1000}\r\n                height={300}\r\n                data={data}\r\n                margin={{\r\n                    top: 40, right: 20, left: 60, bottom: 10,\r\n                }}\r\n            >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend  verticalAlign=\"top\" height={36}/>\r\n                {lineOptions.map((item)=>{\r\n                    return (<Line key={item.key} type={item.type || \"monotone\"} dataKey={item.key||'value'} stroke={`#${Math.floor(Math.random()*16777215).toString(16)}`}  name={item.key}/>)\r\n                })}\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    )\r\n  }\r\n\r\nexport default LineChartWidget\r\n\r\n*/\r\n","import React from 'react'\r\nimport Navigation from './Naviagtion'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Welcome from './Welcome';\r\nimport Counter from './useStateExamples/counter/Counter';\r\nimport Index from './useEffectExamples/Index';\r\nimport Index2 from './useEffectExamples/Index2';\r\nimport IndexContext from './useContextExamples/Index';\r\nimport IndexReducer from './useReducerExamples/Index';\r\nimport IndexCallback from './useCallbackExamples/IndexCallback';\r\nimport IndexMemo from './useMemoExamples/IndexMemo';\r\nimport IndexRef from './useRefExamples/IndexRef';\r\nimport CustomIndex from './customHooksExamples/CustomIndex';\r\nimport JSTesting from './jsTesting/JSTesting';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Navigation/>\r\n            <div className=\"container-fluid\" style={{marginTop:'100px'}}>\r\n                <Switch>\r\n                    <Route name=\"welcome\" exact path=\"/\" component={Welcome} />\r\n                    <Route name=\"useState\" exact path=\"/useState\" component={Counter} />\r\n                    <Route name=\"useEffect\" exact path=\"/useEffect\" component={Index} />\r\n                    <Route name=\"useEffectDataFetch\" exact path=\"/useEffect/datafetch\" component={Index2} />\r\n                    <Route name=\"useContext\" exact path=\"/useContext\" component={IndexContext} />\r\n                    <Route name=\"useReducer\" exact path=\"/useReducer\" component={IndexReducer} />\r\n                    <Route name=\"useCallback\" exact path=\"/useCallback\" component={IndexCallback} />\r\n                    <Route name=\"useMemo\" exact path=\"/useMemo\" component={IndexMemo} />\r\n                    <Route name=\"useRef\" exact path=\"/useRef\" component={IndexRef} />\r\n                    <Route name=\"customHooks\" exact path=\"/customHooks\" component={CustomIndex} />\r\n                    <Route name=\"jsTesting\" exact path=\"/testing\" component={JSTesting} />\r\n                </Switch>\r\n            </div>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport Home from './Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n <Router>\n    <App />\n  </Router> ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}